2020-08-25 16:05:47,225 | CVTrainer-INFO: Successfully initialized.
2020-08-25 16:05:47,226 | CVTrainer-INFO: Model: CifarSEResNet(
  (conv1): Conv2d(3, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
  (bn1): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (relu): ReLU(inplace=True)
  (layer1): Sequential(
    (0): CifarSEBasicBlock(
      (conv1): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (se): SELayer(
        (avg_pool): AdaptiveAvgPool2d(output_size=1)
        (fc): Sequential(
          (0): Linear(in_features=16, out_features=1, bias=False)
          (1): ReLU(inplace=True)
          (2): Linear(in_features=1, out_features=16, bias=False)
          (3): Sigmoid()
        )
      )
    )
    (1): CifarSEBasicBlock(
      (conv1): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (se): SELayer(
        (avg_pool): AdaptiveAvgPool2d(output_size=1)
        (fc): Sequential(
          (0): Linear(in_features=16, out_features=1, bias=False)
          (1): ReLU(inplace=True)
          (2): Linear(in_features=1, out_features=16, bias=False)
          (3): Sigmoid()
        )
      )
    )
    (2): CifarSEBasicBlock(
      (conv1): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (se): SELayer(
        (avg_pool): AdaptiveAvgPool2d(output_size=1)
        (fc): Sequential(
          (0): Linear(in_features=16, out_features=1, bias=False)
          (1): ReLU(inplace=True)
          (2): Linear(in_features=1, out_features=16, bias=False)
          (3): Sigmoid()
        )
      )
    )
  )
  (layer2): Sequential(
    (0): CifarSEBasicBlock(
      (conv1): Conv2d(16, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (se): SELayer(
        (avg_pool): AdaptiveAvgPool2d(output_size=1)
        (fc): Sequential(
          (0): Linear(in_features=32, out_features=2, bias=False)
          (1): ReLU(inplace=True)
          (2): Linear(in_features=2, out_features=32, bias=False)
          (3): Sigmoid()
        )
      )
      (downsample): Sequential(
        (0): Conv2d(16, 32, kernel_size=(1, 1), stride=(2, 2), bias=False)
        (1): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (1): CifarSEBasicBlock(
      (conv1): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (se): SELayer(
        (avg_pool): AdaptiveAvgPool2d(output_size=1)
        (fc): Sequential(
          (0): Linear(in_features=32, out_features=2, bias=False)
          (1): ReLU(inplace=True)
          (2): Linear(in_features=2, out_features=32, bias=False)
          (3): Sigmoid()
        )
      )
    )
    (2): CifarSEBasicBlock(
      (conv1): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (se): SELayer(
        (avg_pool): AdaptiveAvgPool2d(output_size=1)
        (fc): Sequential(
          (0): Linear(in_features=32, out_features=2, bias=False)
          (1): ReLU(inplace=True)
          (2): Linear(in_features=2, out_features=32, bias=False)
          (3): Sigmoid()
        )
      )
    )
  )
  (layer3): Sequential(
    (0): CifarSEBasicBlock(
      (conv1): Conv2d(32, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (se): SELayer(
        (avg_pool): AdaptiveAvgPool2d(output_size=1)
        (fc): Sequential(
          (0): Linear(in_features=64, out_features=4, bias=False)
          (1): ReLU(inplace=True)
          (2): Linear(in_features=4, out_features=64, bias=False)
          (3): Sigmoid()
        )
      )
      (downsample): Sequential(
        (0): Conv2d(32, 64, kernel_size=(1, 1), stride=(2, 2), bias=False)
        (1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (1): CifarSEBasicBlock(
      (conv1): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (se): SELayer(
        (avg_pool): AdaptiveAvgPool2d(output_size=1)
        (fc): Sequential(
          (0): Linear(in_features=64, out_features=4, bias=False)
          (1): ReLU(inplace=True)
          (2): Linear(in_features=4, out_features=64, bias=False)
          (3): Sigmoid()
        )
      )
    )
    (2): CifarSEBasicBlock(
      (conv1): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (se): SELayer(
        (avg_pool): AdaptiveAvgPool2d(output_size=1)
        (fc): Sequential(
          (0): Linear(in_features=64, out_features=4, bias=False)
          (1): ReLU(inplace=True)
          (2): Linear(in_features=4, out_features=64, bias=False)
          (3): Sigmoid()
        )
      )
    )
  )
  (avgpool): AdaptiveAvgPool2d(output_size=1)
  (fc): Linear(in_features=64, out_features=4, bias=True)
)
2020-08-25 16:05:47,226 | CVTrainer-INFO: Optimizer: SGD (
Parameter Group 0
    dampening: 0
    initial_lr: 0.1
    lr: 0.1
    momentum: 0.9
    nesterov: False
    weight_decay: 0.0001
)
2020-08-25 16:05:47,226 | CVTrainer-INFO: Criterion: <function cross_entropy at 0x7fb1e57dc9d8>
2020-08-25 16:05:47,721 | CVTrainer-INFO: Number of total data: 81718
2020-08-25 16:05:47,721 | CVTrainer-INFO: ##### Training Configuration #####
2020-08-25 16:05:47,722 | CVTrainer-INFO: device ---> cuda
2020-08-25 16:05:47,722 | CVTrainer-INFO: epochs ---> 10
2020-08-25 16:05:47,722 | CVTrainer-INFO: batches_per_epoch ---> 600
2020-08-25 16:05:47,722 | CVTrainer-INFO: batch_size ---> 16
2020-08-25 16:05:47,722 | CVTrainer-INFO: num_workers ---> 2
2020-08-25 16:05:47,722 | CVTrainer-INFO: output_folder ---> test_run/fold_9
2020-08-25 16:05:47,722 | CVTrainer-INFO: validation_split ---> 0.1
2020-08-25 16:05:47,722 | CVTrainer-INFO: validation_indices --->  [4981, 4134, 24658 ... 80152, 11918, 44068]
2020-08-25 16:05:47,722 | CVTrainer-INFO: prefetch_validation ---> False
2020-08-25 16:05:47,722 | CVTrainer-INFO: amp ---> False
2020-08-25 16:05:47,722 | CVTrainer-INFO: log_level ---> INFO
2020-08-25 16:05:47,722 | CVTrainer-INFO: early_stopping_patience ---> 0
2020-08-25 16:05:47,722 | CVTrainer-INFO: finished_fold ---> False
2020-08-25 16:05:47,722 | CVTrainer-INFO: ##### Training Configuration #####
2020-08-25 16:05:47,723 | CVTrainer-INFO: Using GPU "TITAN Xp COLLECTORS EDITION" for training.
2020-08-25 16:05:47,723 | CVTrainer-INFO: Starting training.
2020-08-25 16:05:47,723 | CVTrainer-INFO: Automatic Mixed Precision is DISABLED
2020-08-25 16:05:47,723 | CVTrainer-INFO: Starting epoch 0
2020-08-25 16:06:15,525 | CVTrainer-INFO: Validating ...
2020-08-25 16:06:21,940 | CVTrainer-INFO: Epoch 0 finished --> Elapsed Time: 34.21712860604748s
2020-08-25 16:06:21,941 | CVTrainer-INFO: Avg. train loss: 0.612515389919281
2020-08-25 16:06:21,941 | CVTrainer-INFO: Avg. validation loss: 7.380068778991699
2020-08-25 16:06:21,941 | CVTrainer-INFO: Saving checkpoint ...
2020-08-25 16:06:21,955 | CVTrainer-INFO: Starting epoch 1
2020-08-25 16:06:49,780 | CVTrainer-INFO: Validating ...
2020-08-25 16:06:56,159 | CVTrainer-INFO: Epoch 1 finished --> Elapsed Time: 34.204182396642864s
2020-08-25 16:06:56,159 | CVTrainer-INFO: Avg. train loss: 0.43220701813697815
2020-08-25 16:06:56,160 | CVTrainer-INFO: Avg. validation loss: 0.5022773742675781
2020-08-25 16:06:56,160 | CVTrainer-INFO: Saving checkpoint ...
2020-08-25 16:06:56,174 | CVTrainer-INFO: Starting epoch 2
2020-08-25 16:07:24,031 | CVTrainer-INFO: Validating ...
2020-08-25 16:07:30,365 | CVTrainer-INFO: Epoch 2 finished --> Elapsed Time: 34.19089587777853s
2020-08-25 16:07:30,365 | CVTrainer-INFO: Avg. train loss: 0.3716124892234802
2020-08-25 16:07:30,366 | CVTrainer-INFO: Avg. validation loss: 0.3821156322956085
2020-08-25 16:07:30,366 | CVTrainer-INFO: Saving checkpoint ...
2020-08-25 16:07:30,392 | CVTrainer-INFO: Starting epoch 3
2020-08-25 16:07:58,268 | CVTrainer-INFO: Validating ...
2020-08-25 16:08:04,640 | CVTrainer-INFO: Epoch 3 finished --> Elapsed Time: 34.24757210211828s
2020-08-25 16:08:04,640 | CVTrainer-INFO: Avg. train loss: 0.34984147548675537
2020-08-25 16:08:04,641 | CVTrainer-INFO: Avg. validation loss: 0.3956890404224396
2020-08-25 16:08:04,641 | CVTrainer-INFO: Saving checkpoint ...
2020-08-25 16:08:04,657 | CVTrainer-INFO: Starting epoch 4
2020-08-25 16:08:32,506 | CVTrainer-INFO: Validating ...
2020-08-25 16:08:38,704 | CVTrainer-INFO: Epoch 4 finished --> Elapsed Time: 34.04661184316501s
2020-08-25 16:08:38,704 | CVTrainer-INFO: Avg. train loss: 0.31883424520492554
2020-08-25 16:08:38,704 | CVTrainer-INFO: Avg. validation loss: 0.4769139289855957
2020-08-25 16:08:38,705 | CVTrainer-INFO: Saving checkpoint ...
2020-08-25 16:08:38,725 | CVTrainer-INFO: Starting epoch 5
2020-08-25 16:09:06,741 | CVTrainer-INFO: Validating ...
2020-08-25 16:09:13,026 | CVTrainer-INFO: Epoch 5 finished --> Elapsed Time: 34.30111629515886s
2020-08-25 16:09:13,026 | CVTrainer-INFO: Avg. train loss: 0.3160383403301239
2020-08-25 16:09:13,027 | CVTrainer-INFO: Avg. validation loss: 2.3175389766693115
2020-08-25 16:09:13,027 | CVTrainer-INFO: Saving checkpoint ...
2020-08-25 16:09:13,045 | CVTrainer-INFO: Starting epoch 6
2020-08-25 16:09:40,988 | CVTrainer-INFO: Validating ...
2020-08-25 16:09:47,373 | CVTrainer-INFO: Epoch 6 finished --> Elapsed Time: 34.32805040385574s
2020-08-25 16:09:47,374 | CVTrainer-INFO: Avg. train loss: 0.29613521695137024
2020-08-25 16:09:47,374 | CVTrainer-INFO: Avg. validation loss: 0.6073234677314758
2020-08-25 16:09:47,374 | CVTrainer-INFO: Saving checkpoint ...
2020-08-25 16:09:47,392 | CVTrainer-INFO: Starting epoch 7
2020-08-25 16:10:15,222 | CVTrainer-INFO: Validating ...
2020-08-25 16:10:21,580 | CVTrainer-INFO: Epoch 7 finished --> Elapsed Time: 34.18814105307683s
2020-08-25 16:10:21,581 | CVTrainer-INFO: Avg. train loss: 0.28924259543418884
2020-08-25 16:10:21,581 | CVTrainer-INFO: Avg. validation loss: 1.078969955444336
2020-08-25 16:10:21,581 | CVTrainer-INFO: Saving checkpoint ...
2020-08-25 16:10:21,591 | CVTrainer-INFO: Starting epoch 8
2020-08-25 16:10:49,486 | CVTrainer-INFO: Validating ...
2020-08-25 16:10:55,869 | CVTrainer-INFO: Epoch 8 finished --> Elapsed Time: 34.277870604768395s
2020-08-25 16:10:55,869 | CVTrainer-INFO: Avg. train loss: 0.28652530908584595
2020-08-25 16:10:55,870 | CVTrainer-INFO: Avg. validation loss: 0.27583855390548706
2020-08-25 16:10:55,870 | CVTrainer-INFO: Saving checkpoint ...
2020-08-25 16:10:55,887 | CVTrainer-INFO: Starting epoch 9
2020-08-25 16:11:23,785 | CVTrainer-INFO: Validating ...
2020-08-25 16:11:30,171 | CVTrainer-INFO: Epoch 9 finished --> Elapsed Time: 34.28328160615638s
2020-08-25 16:11:30,171 | CVTrainer-INFO: Avg. train loss: 0.2692674696445465
2020-08-25 16:11:30,171 | CVTrainer-INFO: Avg. validation loss: 0.2584764063358307
2020-08-25 16:11:30,172 | CVTrainer-INFO: Saving checkpoint ...
2020-08-25 16:11:30,186 | CVTrainer-INFO: Finished training on Fold 9.
