2020-08-25 15:48:38,488 | CVTrainer-INFO: Successfully initialized.
2020-08-25 15:48:38,489 | CVTrainer-INFO: Model: CifarSEResNet(
  (conv1): Conv2d(3, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
  (bn1): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (relu): ReLU(inplace=True)
  (layer1): Sequential(
    (0): CifarSEBasicBlock(
      (conv1): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (se): SELayer(
        (avg_pool): AdaptiveAvgPool2d(output_size=1)
        (fc): Sequential(
          (0): Linear(in_features=16, out_features=1, bias=False)
          (1): ReLU(inplace=True)
          (2): Linear(in_features=1, out_features=16, bias=False)
          (3): Sigmoid()
        )
      )
    )
    (1): CifarSEBasicBlock(
      (conv1): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (se): SELayer(
        (avg_pool): AdaptiveAvgPool2d(output_size=1)
        (fc): Sequential(
          (0): Linear(in_features=16, out_features=1, bias=False)
          (1): ReLU(inplace=True)
          (2): Linear(in_features=1, out_features=16, bias=False)
          (3): Sigmoid()
        )
      )
    )
    (2): CifarSEBasicBlock(
      (conv1): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (se): SELayer(
        (avg_pool): AdaptiveAvgPool2d(output_size=1)
        (fc): Sequential(
          (0): Linear(in_features=16, out_features=1, bias=False)
          (1): ReLU(inplace=True)
          (2): Linear(in_features=1, out_features=16, bias=False)
          (3): Sigmoid()
        )
      )
    )
  )
  (layer2): Sequential(
    (0): CifarSEBasicBlock(
      (conv1): Conv2d(16, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (se): SELayer(
        (avg_pool): AdaptiveAvgPool2d(output_size=1)
        (fc): Sequential(
          (0): Linear(in_features=32, out_features=2, bias=False)
          (1): ReLU(inplace=True)
          (2): Linear(in_features=2, out_features=32, bias=False)
          (3): Sigmoid()
        )
      )
      (downsample): Sequential(
        (0): Conv2d(16, 32, kernel_size=(1, 1), stride=(2, 2), bias=False)
        (1): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (1): CifarSEBasicBlock(
      (conv1): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (se): SELayer(
        (avg_pool): AdaptiveAvgPool2d(output_size=1)
        (fc): Sequential(
          (0): Linear(in_features=32, out_features=2, bias=False)
          (1): ReLU(inplace=True)
          (2): Linear(in_features=2, out_features=32, bias=False)
          (3): Sigmoid()
        )
      )
    )
    (2): CifarSEBasicBlock(
      (conv1): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (se): SELayer(
        (avg_pool): AdaptiveAvgPool2d(output_size=1)
        (fc): Sequential(
          (0): Linear(in_features=32, out_features=2, bias=False)
          (1): ReLU(inplace=True)
          (2): Linear(in_features=2, out_features=32, bias=False)
          (3): Sigmoid()
        )
      )
    )
  )
  (layer3): Sequential(
    (0): CifarSEBasicBlock(
      (conv1): Conv2d(32, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (se): SELayer(
        (avg_pool): AdaptiveAvgPool2d(output_size=1)
        (fc): Sequential(
          (0): Linear(in_features=64, out_features=4, bias=False)
          (1): ReLU(inplace=True)
          (2): Linear(in_features=4, out_features=64, bias=False)
          (3): Sigmoid()
        )
      )
      (downsample): Sequential(
        (0): Conv2d(32, 64, kernel_size=(1, 1), stride=(2, 2), bias=False)
        (1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (1): CifarSEBasicBlock(
      (conv1): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (se): SELayer(
        (avg_pool): AdaptiveAvgPool2d(output_size=1)
        (fc): Sequential(
          (0): Linear(in_features=64, out_features=4, bias=False)
          (1): ReLU(inplace=True)
          (2): Linear(in_features=4, out_features=64, bias=False)
          (3): Sigmoid()
        )
      )
    )
    (2): CifarSEBasicBlock(
      (conv1): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (se): SELayer(
        (avg_pool): AdaptiveAvgPool2d(output_size=1)
        (fc): Sequential(
          (0): Linear(in_features=64, out_features=4, bias=False)
          (1): ReLU(inplace=True)
          (2): Linear(in_features=4, out_features=64, bias=False)
          (3): Sigmoid()
        )
      )
    )
  )
  (avgpool): AdaptiveAvgPool2d(output_size=1)
  (fc): Linear(in_features=64, out_features=4, bias=True)
)
2020-08-25 15:48:38,489 | CVTrainer-INFO: Optimizer: SGD (
Parameter Group 0
    dampening: 0
    initial_lr: 0.1
    lr: 0.1
    momentum: 0.9
    nesterov: False
    weight_decay: 0.0001
)
2020-08-25 15:48:38,489 | CVTrainer-INFO: Criterion: <function cross_entropy at 0x7fb1e57dc9d8>
2020-08-25 15:48:38,962 | CVTrainer-INFO: Number of total data: 81718
2020-08-25 15:48:38,962 | CVTrainer-INFO: ##### Training Configuration #####
2020-08-25 15:48:38,963 | CVTrainer-INFO: device ---> cuda
2020-08-25 15:48:38,963 | CVTrainer-INFO: epochs ---> 10
2020-08-25 15:48:38,963 | CVTrainer-INFO: batches_per_epoch ---> 600
2020-08-25 15:48:38,963 | CVTrainer-INFO: batch_size ---> 16
2020-08-25 15:48:38,963 | CVTrainer-INFO: num_workers ---> 2
2020-08-25 15:48:38,963 | CVTrainer-INFO: output_folder ---> test_run/fold_6
2020-08-25 15:48:38,963 | CVTrainer-INFO: validation_split ---> 0.1
2020-08-25 15:48:38,963 | CVTrainer-INFO: validation_indices --->  [42894, 23758, 77380 ... 1533, 8414, 43978]
2020-08-25 15:48:38,963 | CVTrainer-INFO: prefetch_validation ---> False
2020-08-25 15:48:38,963 | CVTrainer-INFO: amp ---> False
2020-08-25 15:48:38,963 | CVTrainer-INFO: log_level ---> INFO
2020-08-25 15:48:38,963 | CVTrainer-INFO: early_stopping_patience ---> 0
2020-08-25 15:48:38,963 | CVTrainer-INFO: finished_fold ---> False
2020-08-25 15:48:38,964 | CVTrainer-INFO: ##### Training Configuration #####
2020-08-25 15:48:38,964 | CVTrainer-INFO: Using GPU "TITAN Xp COLLECTORS EDITION" for training.
2020-08-25 15:48:38,964 | CVTrainer-INFO: Starting training.
2020-08-25 15:48:38,964 | CVTrainer-INFO: Automatic Mixed Precision is DISABLED
2020-08-25 15:48:38,964 | CVTrainer-INFO: Starting epoch 0
2020-08-25 15:49:06,762 | CVTrainer-INFO: Validating ...
2020-08-25 15:49:13,106 | CVTrainer-INFO: Epoch 0 finished --> Elapsed Time: 34.14177981438115s
2020-08-25 15:49:13,106 | CVTrainer-INFO: Avg. train loss: 0.6549085974693298
2020-08-25 15:49:13,107 | CVTrainer-INFO: Avg. validation loss: 0.440788209438324
2020-08-25 15:49:13,107 | CVTrainer-INFO: Saving checkpoint ...
2020-08-25 15:49:13,123 | CVTrainer-INFO: Starting epoch 1
2020-08-25 15:49:40,919 | CVTrainer-INFO: Validating ...
2020-08-25 15:49:47,344 | CVTrainer-INFO: Epoch 1 finished --> Elapsed Time: 34.22146664978936s
2020-08-25 15:49:47,345 | CVTrainer-INFO: Avg. train loss: 0.42109641432762146
2020-08-25 15:49:47,345 | CVTrainer-INFO: Avg. validation loss: 0.2984175682067871
2020-08-25 15:49:47,345 | CVTrainer-INFO: Saving checkpoint ...
2020-08-25 15:49:47,362 | CVTrainer-INFO: Starting epoch 2
2020-08-25 15:50:15,075 | CVTrainer-INFO: Validating ...
2020-08-25 15:50:21,477 | CVTrainer-INFO: Epoch 2 finished --> Elapsed Time: 34.11499182507396s
2020-08-25 15:50:21,477 | CVTrainer-INFO: Avg. train loss: 0.34660473465919495
2020-08-25 15:50:21,478 | CVTrainer-INFO: Avg. validation loss: 0.44472572207450867
2020-08-25 15:50:21,478 | CVTrainer-INFO: Saving checkpoint ...
2020-08-25 15:50:21,494 | CVTrainer-INFO: Starting epoch 3
2020-08-25 15:50:49,292 | CVTrainer-INFO: Validating ...
2020-08-25 15:50:55,674 | CVTrainer-INFO: Epoch 3 finished --> Elapsed Time: 34.18011841364205s
2020-08-25 15:50:55,675 | CVTrainer-INFO: Avg. train loss: 0.3202855885028839
2020-08-25 15:50:55,675 | CVTrainer-INFO: Avg. validation loss: 0.2961151897907257
2020-08-25 15:50:55,675 | CVTrainer-INFO: Saving checkpoint ...
2020-08-25 15:50:55,688 | CVTrainer-INFO: Starting epoch 4
2020-08-25 15:51:23,479 | CVTrainer-INFO: Validating ...
2020-08-25 15:51:29,832 | CVTrainer-INFO: Epoch 4 finished --> Elapsed Time: 34.144295966252685s
2020-08-25 15:51:29,833 | CVTrainer-INFO: Avg. train loss: 0.30622628331184387
2020-08-25 15:51:29,833 | CVTrainer-INFO: Avg. validation loss: 0.388568639755249
2020-08-25 15:51:29,833 | CVTrainer-INFO: Saving checkpoint ...
2020-08-25 15:51:29,847 | CVTrainer-INFO: Starting epoch 5
2020-08-25 15:51:57,665 | CVTrainer-INFO: Validating ...
2020-08-25 15:52:04,058 | CVTrainer-INFO: Epoch 5 finished --> Elapsed Time: 34.21114030480385s
2020-08-25 15:52:04,058 | CVTrainer-INFO: Avg. train loss: 0.30413031578063965
2020-08-25 15:52:04,059 | CVTrainer-INFO: Avg. validation loss: 0.26911258697509766
2020-08-25 15:52:04,059 | CVTrainer-INFO: Saving checkpoint ...
2020-08-25 15:52:04,073 | CVTrainer-INFO: Starting epoch 6
2020-08-25 15:52:31,864 | CVTrainer-INFO: Validating ...
2020-08-25 15:52:38,206 | CVTrainer-INFO: Epoch 6 finished --> Elapsed Time: 34.133100769948214s
2020-08-25 15:52:38,206 | CVTrainer-INFO: Avg. train loss: 0.29877549409866333
2020-08-25 15:52:38,207 | CVTrainer-INFO: Avg. validation loss: 0.25499555468559265
2020-08-25 15:52:38,207 | CVTrainer-INFO: Saving checkpoint ...
2020-08-25 15:52:38,223 | CVTrainer-INFO: Starting epoch 7
2020-08-25 15:53:06,084 | CVTrainer-INFO: Validating ...
2020-08-25 15:53:12,474 | CVTrainer-INFO: Epoch 7 finished --> Elapsed Time: 34.25044370116666s
2020-08-25 15:53:12,474 | CVTrainer-INFO: Avg. train loss: 0.28966599702835083
2020-08-25 15:53:12,474 | CVTrainer-INFO: Avg. validation loss: 0.2606780529022217
2020-08-25 15:53:12,474 | CVTrainer-INFO: Saving checkpoint ...
2020-08-25 15:53:12,491 | CVTrainer-INFO: Starting epoch 8
2020-08-25 15:53:40,304 | CVTrainer-INFO: Validating ...
2020-08-25 15:53:46,673 | CVTrainer-INFO: Epoch 8 finished --> Elapsed Time: 34.182344460859895s
2020-08-25 15:53:46,674 | CVTrainer-INFO: Avg. train loss: 0.29070374369621277
2020-08-25 15:53:46,674 | CVTrainer-INFO: Avg. validation loss: 0.28117451071739197
2020-08-25 15:53:46,674 | CVTrainer-INFO: Saving checkpoint ...
2020-08-25 15:53:46,687 | CVTrainer-INFO: Starting epoch 9
2020-08-25 15:54:14,489 | CVTrainer-INFO: Validating ...
2020-08-25 15:54:20,885 | CVTrainer-INFO: Epoch 9 finished --> Elapsed Time: 34.19817246636376s
2020-08-25 15:54:20,885 | CVTrainer-INFO: Avg. train loss: 0.2760615646839142
2020-08-25 15:54:20,885 | CVTrainer-INFO: Avg. validation loss: 0.4078395664691925
2020-08-25 15:54:20,886 | CVTrainer-INFO: Saving checkpoint ...
2020-08-25 15:54:20,900 | CVTrainer-INFO: Finished training on Fold 6.
