2020-08-25 15:25:49,345 | CVTrainer-INFO: Successfully initialized.
2020-08-25 15:25:49,346 | CVTrainer-INFO: Model: CifarSEResNet(
  (conv1): Conv2d(3, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
  (bn1): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (relu): ReLU(inplace=True)
  (layer1): Sequential(
    (0): CifarSEBasicBlock(
      (conv1): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (se): SELayer(
        (avg_pool): AdaptiveAvgPool2d(output_size=1)
        (fc): Sequential(
          (0): Linear(in_features=16, out_features=1, bias=False)
          (1): ReLU(inplace=True)
          (2): Linear(in_features=1, out_features=16, bias=False)
          (3): Sigmoid()
        )
      )
    )
    (1): CifarSEBasicBlock(
      (conv1): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (se): SELayer(
        (avg_pool): AdaptiveAvgPool2d(output_size=1)
        (fc): Sequential(
          (0): Linear(in_features=16, out_features=1, bias=False)
          (1): ReLU(inplace=True)
          (2): Linear(in_features=1, out_features=16, bias=False)
          (3): Sigmoid()
        )
      )
    )
    (2): CifarSEBasicBlock(
      (conv1): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (se): SELayer(
        (avg_pool): AdaptiveAvgPool2d(output_size=1)
        (fc): Sequential(
          (0): Linear(in_features=16, out_features=1, bias=False)
          (1): ReLU(inplace=True)
          (2): Linear(in_features=1, out_features=16, bias=False)
          (3): Sigmoid()
        )
      )
    )
  )
  (layer2): Sequential(
    (0): CifarSEBasicBlock(
      (conv1): Conv2d(16, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (se): SELayer(
        (avg_pool): AdaptiveAvgPool2d(output_size=1)
        (fc): Sequential(
          (0): Linear(in_features=32, out_features=2, bias=False)
          (1): ReLU(inplace=True)
          (2): Linear(in_features=2, out_features=32, bias=False)
          (3): Sigmoid()
        )
      )
      (downsample): Sequential(
        (0): Conv2d(16, 32, kernel_size=(1, 1), stride=(2, 2), bias=False)
        (1): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (1): CifarSEBasicBlock(
      (conv1): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (se): SELayer(
        (avg_pool): AdaptiveAvgPool2d(output_size=1)
        (fc): Sequential(
          (0): Linear(in_features=32, out_features=2, bias=False)
          (1): ReLU(inplace=True)
          (2): Linear(in_features=2, out_features=32, bias=False)
          (3): Sigmoid()
        )
      )
    )
    (2): CifarSEBasicBlock(
      (conv1): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (se): SELayer(
        (avg_pool): AdaptiveAvgPool2d(output_size=1)
        (fc): Sequential(
          (0): Linear(in_features=32, out_features=2, bias=False)
          (1): ReLU(inplace=True)
          (2): Linear(in_features=2, out_features=32, bias=False)
          (3): Sigmoid()
        )
      )
    )
  )
  (layer3): Sequential(
    (0): CifarSEBasicBlock(
      (conv1): Conv2d(32, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (se): SELayer(
        (avg_pool): AdaptiveAvgPool2d(output_size=1)
        (fc): Sequential(
          (0): Linear(in_features=64, out_features=4, bias=False)
          (1): ReLU(inplace=True)
          (2): Linear(in_features=4, out_features=64, bias=False)
          (3): Sigmoid()
        )
      )
      (downsample): Sequential(
        (0): Conv2d(32, 64, kernel_size=(1, 1), stride=(2, 2), bias=False)
        (1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (1): CifarSEBasicBlock(
      (conv1): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (se): SELayer(
        (avg_pool): AdaptiveAvgPool2d(output_size=1)
        (fc): Sequential(
          (0): Linear(in_features=64, out_features=4, bias=False)
          (1): ReLU(inplace=True)
          (2): Linear(in_features=4, out_features=64, bias=False)
          (3): Sigmoid()
        )
      )
    )
    (2): CifarSEBasicBlock(
      (conv1): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (se): SELayer(
        (avg_pool): AdaptiveAvgPool2d(output_size=1)
        (fc): Sequential(
          (0): Linear(in_features=64, out_features=4, bias=False)
          (1): ReLU(inplace=True)
          (2): Linear(in_features=4, out_features=64, bias=False)
          (3): Sigmoid()
        )
      )
    )
  )
  (avgpool): AdaptiveAvgPool2d(output_size=1)
  (fc): Linear(in_features=64, out_features=4, bias=True)
)
2020-08-25 15:25:49,346 | CVTrainer-INFO: Optimizer: SGD (
Parameter Group 0
    dampening: 0
    initial_lr: 0.1
    lr: 0.1
    momentum: 0.9
    nesterov: False
    weight_decay: 0.0001
)
2020-08-25 15:25:49,346 | CVTrainer-INFO: Criterion: <function cross_entropy at 0x7fb1e57dc9d8>
2020-08-25 15:25:49,806 | CVTrainer-INFO: Number of total data: 81718
2020-08-25 15:25:49,807 | CVTrainer-INFO: ##### Training Configuration #####
2020-08-25 15:25:49,807 | CVTrainer-INFO: device ---> cuda
2020-08-25 15:25:49,807 | CVTrainer-INFO: epochs ---> 10
2020-08-25 15:25:49,807 | CVTrainer-INFO: batches_per_epoch ---> 600
2020-08-25 15:25:49,807 | CVTrainer-INFO: batch_size ---> 16
2020-08-25 15:25:49,807 | CVTrainer-INFO: num_workers ---> 2
2020-08-25 15:25:49,807 | CVTrainer-INFO: output_folder ---> test_run/fold_2
2020-08-25 15:25:49,807 | CVTrainer-INFO: validation_split ---> 0.1
2020-08-25 15:25:49,807 | CVTrainer-INFO: validation_indices --->  [934, 73641, 76907 ... 33553, 60735, 7598]
2020-08-25 15:25:49,807 | CVTrainer-INFO: prefetch_validation ---> False
2020-08-25 15:25:49,807 | CVTrainer-INFO: amp ---> False
2020-08-25 15:25:49,807 | CVTrainer-INFO: log_level ---> INFO
2020-08-25 15:25:49,807 | CVTrainer-INFO: early_stopping_patience ---> 0
2020-08-25 15:25:49,807 | CVTrainer-INFO: finished_fold ---> False
2020-08-25 15:25:49,808 | CVTrainer-INFO: ##### Training Configuration #####
2020-08-25 15:25:49,808 | CVTrainer-INFO: Using GPU "TITAN Xp COLLECTORS EDITION" for training.
2020-08-25 15:25:49,808 | CVTrainer-INFO: Starting training.
2020-08-25 15:25:49,808 | CVTrainer-INFO: Automatic Mixed Precision is DISABLED
2020-08-25 15:25:49,808 | CVTrainer-INFO: Starting epoch 0
2020-08-25 15:26:17,363 | CVTrainer-INFO: Validating ...
2020-08-25 15:26:23,608 | CVTrainer-INFO: Epoch 0 finished --> Elapsed Time: 33.79982721898705s
2020-08-25 15:26:23,608 | CVTrainer-INFO: Avg. train loss: 0.6537004113197327
2020-08-25 15:26:23,608 | CVTrainer-INFO: Avg. validation loss: 0.7387639284133911
2020-08-25 15:26:23,608 | CVTrainer-INFO: Saving checkpoint ...
2020-08-25 15:26:23,618 | CVTrainer-INFO: Starting epoch 1
2020-08-25 15:26:51,461 | CVTrainer-INFO: Validating ...
2020-08-25 15:26:57,750 | CVTrainer-INFO: Epoch 1 finished --> Elapsed Time: 34.13125192001462s
2020-08-25 15:26:57,750 | CVTrainer-INFO: Avg. train loss: 0.42336323857307434
2020-08-25 15:26:57,751 | CVTrainer-INFO: Avg. validation loss: 0.5708664655685425
2020-08-25 15:26:57,751 | CVTrainer-INFO: Saving checkpoint ...
2020-08-25 15:26:57,767 | CVTrainer-INFO: Starting epoch 2
2020-08-25 15:27:25,600 | CVTrainer-INFO: Validating ...
2020-08-25 15:27:31,950 | CVTrainer-INFO: Epoch 2 finished --> Elapsed Time: 34.18238768493757s
2020-08-25 15:27:31,950 | CVTrainer-INFO: Avg. train loss: 0.36860907077789307
2020-08-25 15:27:31,951 | CVTrainer-INFO: Avg. validation loss: 0.2786632776260376
2020-08-25 15:27:31,951 | CVTrainer-INFO: Saving checkpoint ...
2020-08-25 15:27:31,966 | CVTrainer-INFO: Starting epoch 3
2020-08-25 15:27:59,628 | CVTrainer-INFO: Validating ...
2020-08-25 15:28:05,839 | CVTrainer-INFO: Epoch 3 finished --> Elapsed Time: 33.87271626479924s
2020-08-25 15:28:05,840 | CVTrainer-INFO: Avg. train loss: 0.3541097640991211
2020-08-25 15:28:05,840 | CVTrainer-INFO: Avg. validation loss: 0.3525654971599579
2020-08-25 15:28:05,840 | CVTrainer-INFO: Saving checkpoint ...
2020-08-25 15:28:05,850 | CVTrainer-INFO: Starting epoch 4
2020-08-25 15:28:33,826 | CVTrainer-INFO: Validating ...
2020-08-25 15:28:40,205 | CVTrainer-INFO: Epoch 4 finished --> Elapsed Time: 34.35514527512714s
2020-08-25 15:28:40,206 | CVTrainer-INFO: Avg. train loss: 0.3012658953666687
2020-08-25 15:28:40,206 | CVTrainer-INFO: Avg. validation loss: 0.296027809381485
2020-08-25 15:28:40,206 | CVTrainer-INFO: Saving checkpoint ...
2020-08-25 15:28:40,220 | CVTrainer-INFO: Starting epoch 5
2020-08-25 15:29:07,954 | CVTrainer-INFO: Validating ...
2020-08-25 15:29:14,262 | CVTrainer-INFO: Epoch 5 finished --> Elapsed Time: 34.041586086153984s
2020-08-25 15:29:14,262 | CVTrainer-INFO: Avg. train loss: 0.3195764422416687
2020-08-25 15:29:14,262 | CVTrainer-INFO: Avg. validation loss: 0.3434034585952759
2020-08-25 15:29:14,262 | CVTrainer-INFO: Saving checkpoint ...
2020-08-25 15:29:14,272 | CVTrainer-INFO: Starting epoch 6
2020-08-25 15:29:42,098 | CVTrainer-INFO: Validating ...
2020-08-25 15:29:48,447 | CVTrainer-INFO: Epoch 6 finished --> Elapsed Time: 34.174777823966s
2020-08-25 15:29:48,448 | CVTrainer-INFO: Avg. train loss: 0.2980998456478119
2020-08-25 15:29:48,448 | CVTrainer-INFO: Avg. validation loss: 0.2677818238735199
2020-08-25 15:29:48,448 | CVTrainer-INFO: Saving checkpoint ...
2020-08-25 15:29:48,459 | CVTrainer-INFO: Starting epoch 7
2020-08-25 15:30:16,254 | CVTrainer-INFO: Validating ...
2020-08-25 15:30:22,598 | CVTrainer-INFO: Epoch 7 finished --> Elapsed Time: 34.139064671006054s
2020-08-25 15:30:22,599 | CVTrainer-INFO: Avg. train loss: 0.2941722869873047
2020-08-25 15:30:22,599 | CVTrainer-INFO: Avg. validation loss: 0.24859558045864105
2020-08-25 15:30:22,599 | CVTrainer-INFO: Saving checkpoint ...
2020-08-25 15:30:22,614 | CVTrainer-INFO: Starting epoch 8
2020-08-25 15:30:50,510 | CVTrainer-INFO: Validating ...
2020-08-25 15:30:56,773 | CVTrainer-INFO: Epoch 8 finished --> Elapsed Time: 34.158823447301984s
2020-08-25 15:30:56,774 | CVTrainer-INFO: Avg. train loss: 0.2805088758468628
2020-08-25 15:30:56,774 | CVTrainer-INFO: Avg. validation loss: 0.3003232479095459
2020-08-25 15:30:56,774 | CVTrainer-INFO: Saving checkpoint ...
2020-08-25 15:30:56,794 | CVTrainer-INFO: Starting epoch 9
2020-08-25 15:31:24,806 | CVTrainer-INFO: Validating ...
2020-08-25 15:31:31,166 | CVTrainer-INFO: Epoch 9 finished --> Elapsed Time: 34.37238924205303s
2020-08-25 15:31:31,167 | CVTrainer-INFO: Avg. train loss: 0.27873358130455017
2020-08-25 15:31:31,167 | CVTrainer-INFO: Avg. validation loss: 0.2531525194644928
2020-08-25 15:31:31,168 | CVTrainer-INFO: Saving checkpoint ...
2020-08-25 15:31:31,183 | CVTrainer-INFO: Finished training on Fold 2.
