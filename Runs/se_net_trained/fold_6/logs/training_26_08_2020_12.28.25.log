2020-08-26 12:28:25,717 | CVTrainer-INFO: Successfully initialized.
2020-08-26 12:28:25,718 | CVTrainer-INFO: Model: CifarSEResNet(
  (conv1): Conv2d(3, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
  (bn1): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (relu): ReLU(inplace=True)
  (layer1): Sequential(
    (0): CifarSEBasicBlock(
      (conv1): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (se): SELayer(
        (avg_pool): AdaptiveAvgPool2d(output_size=1)
        (fc): Sequential(
          (0): Linear(in_features=16, out_features=1, bias=False)
          (1): ReLU(inplace=True)
          (2): Linear(in_features=1, out_features=16, bias=False)
          (3): Sigmoid()
        )
      )
    )
    (1): CifarSEBasicBlock(
      (conv1): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (se): SELayer(
        (avg_pool): AdaptiveAvgPool2d(output_size=1)
        (fc): Sequential(
          (0): Linear(in_features=16, out_features=1, bias=False)
          (1): ReLU(inplace=True)
          (2): Linear(in_features=1, out_features=16, bias=False)
          (3): Sigmoid()
        )
      )
    )
    (2): CifarSEBasicBlock(
      (conv1): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (se): SELayer(
        (avg_pool): AdaptiveAvgPool2d(output_size=1)
        (fc): Sequential(
          (0): Linear(in_features=16, out_features=1, bias=False)
          (1): ReLU(inplace=True)
          (2): Linear(in_features=1, out_features=16, bias=False)
          (3): Sigmoid()
        )
      )
    )
  )
  (layer2): Sequential(
    (0): CifarSEBasicBlock(
      (conv1): Conv2d(16, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (se): SELayer(
        (avg_pool): AdaptiveAvgPool2d(output_size=1)
        (fc): Sequential(
          (0): Linear(in_features=32, out_features=2, bias=False)
          (1): ReLU(inplace=True)
          (2): Linear(in_features=2, out_features=32, bias=False)
          (3): Sigmoid()
        )
      )
      (downsample): Sequential(
        (0): Conv2d(16, 32, kernel_size=(1, 1), stride=(2, 2), bias=False)
        (1): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (1): CifarSEBasicBlock(
      (conv1): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (se): SELayer(
        (avg_pool): AdaptiveAvgPool2d(output_size=1)
        (fc): Sequential(
          (0): Linear(in_features=32, out_features=2, bias=False)
          (1): ReLU(inplace=True)
          (2): Linear(in_features=2, out_features=32, bias=False)
          (3): Sigmoid()
        )
      )
    )
    (2): CifarSEBasicBlock(
      (conv1): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (se): SELayer(
        (avg_pool): AdaptiveAvgPool2d(output_size=1)
        (fc): Sequential(
          (0): Linear(in_features=32, out_features=2, bias=False)
          (1): ReLU(inplace=True)
          (2): Linear(in_features=2, out_features=32, bias=False)
          (3): Sigmoid()
        )
      )
    )
  )
  (layer3): Sequential(
    (0): CifarSEBasicBlock(
      (conv1): Conv2d(32, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (se): SELayer(
        (avg_pool): AdaptiveAvgPool2d(output_size=1)
        (fc): Sequential(
          (0): Linear(in_features=64, out_features=4, bias=False)
          (1): ReLU(inplace=True)
          (2): Linear(in_features=4, out_features=64, bias=False)
          (3): Sigmoid()
        )
      )
      (downsample): Sequential(
        (0): Conv2d(32, 64, kernel_size=(1, 1), stride=(2, 2), bias=False)
        (1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (1): CifarSEBasicBlock(
      (conv1): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (se): SELayer(
        (avg_pool): AdaptiveAvgPool2d(output_size=1)
        (fc): Sequential(
          (0): Linear(in_features=64, out_features=4, bias=False)
          (1): ReLU(inplace=True)
          (2): Linear(in_features=4, out_features=64, bias=False)
          (3): Sigmoid()
        )
      )
    )
    (2): CifarSEBasicBlock(
      (conv1): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (se): SELayer(
        (avg_pool): AdaptiveAvgPool2d(output_size=1)
        (fc): Sequential(
          (0): Linear(in_features=64, out_features=4, bias=False)
          (1): ReLU(inplace=True)
          (2): Linear(in_features=4, out_features=64, bias=False)
          (3): Sigmoid()
        )
      )
    )
  )
  (avgpool): AdaptiveAvgPool2d(output_size=1)
  (fc): Linear(in_features=64, out_features=4, bias=True)
)
2020-08-26 12:28:25,718 | CVTrainer-INFO: Optimizer: SGD (
Parameter Group 0
    dampening: 0
    initial_lr: 0.1
    lr: 0.1
    momentum: 0.9
    nesterov: False
    weight_decay: 0.0001
)
2020-08-26 12:28:25,718 | CVTrainer-INFO: Criterion: <function cross_entropy at 0x7ff0ffed69d8>
2020-08-26 12:28:26,217 | CVTrainer-INFO: Number of total data: 81718
2020-08-26 12:28:26,217 | CVTrainer-INFO: ##### Training Configuration #####
2020-08-26 12:28:26,217 | CVTrainer-INFO: device ---> cuda
2020-08-26 12:28:26,217 | CVTrainer-INFO: epochs ---> 10
2020-08-26 12:28:26,217 | CVTrainer-INFO: batches_per_epoch ---> 1400
2020-08-26 12:28:26,217 | CVTrainer-INFO: batch_size ---> 64
2020-08-26 12:28:26,217 | CVTrainer-INFO: num_workers ---> 2
2020-08-26 12:28:26,217 | CVTrainer-INFO: output_folder ---> se_net_trained/fold_6
2020-08-26 12:28:26,217 | CVTrainer-INFO: validation_split ---> 0.1
2020-08-26 12:28:26,218 | CVTrainer-INFO: validation_indices --->  [29220, 73149, 35134 ... 28715, 52105, 14758]
2020-08-26 12:28:26,218 | CVTrainer-INFO: prefetch_validation ---> False
2020-08-26 12:28:26,218 | CVTrainer-INFO: amp ---> False
2020-08-26 12:28:26,218 | CVTrainer-INFO: log_level ---> INFO
2020-08-26 12:28:26,218 | CVTrainer-INFO: early_stopping_patience ---> 0
2020-08-26 12:28:26,218 | CVTrainer-INFO: finished_fold ---> False
2020-08-26 12:28:26,218 | CVTrainer-INFO: ##### Training Configuration #####
2020-08-26 12:28:26,218 | CVTrainer-INFO: Using GPU "TITAN Xp COLLECTORS EDITION" for training.
2020-08-26 12:28:26,218 | CVTrainer-INFO: Starting training.
2020-08-26 12:28:26,218 | CVTrainer-INFO: Automatic Mixed Precision is DISABLED
2020-08-26 12:28:26,218 | CVTrainer-INFO: Starting epoch 0
2020-08-26 12:31:40,588 | CVTrainer-INFO: Validating ...
2020-08-26 12:31:46,662 | CVTrainer-INFO: Epoch 0 finished --> Elapsed Time: 200.44380008196458s
2020-08-26 12:31:46,663 | CVTrainer-INFO: Avg. train loss: 0.2638973593711853
2020-08-26 12:31:46,663 | CVTrainer-INFO: Avg. validation loss: 0.30436229705810547
2020-08-26 12:31:46,663 | CVTrainer-INFO: Saving checkpoint ...
2020-08-26 12:31:46,678 | CVTrainer-INFO: Starting epoch 1
2020-08-26 12:35:01,558 | CVTrainer-INFO: Validating ...
2020-08-26 12:35:07,499 | CVTrainer-INFO: Epoch 1 finished --> Elapsed Time: 200.82084882073104s
2020-08-26 12:35:07,500 | CVTrainer-INFO: Avg. train loss: 0.1994078904390335
2020-08-26 12:35:07,500 | CVTrainer-INFO: Avg. validation loss: 0.27276185154914856
2020-08-26 12:35:07,500 | CVTrainer-INFO: Saving checkpoint ...
2020-08-26 12:35:07,515 | CVTrainer-INFO: Starting epoch 2
2020-08-26 12:38:22,432 | CVTrainer-INFO: Validating ...
2020-08-26 12:38:28,395 | CVTrainer-INFO: Epoch 2 finished --> Elapsed Time: 200.87943502189592s
2020-08-26 12:38:28,395 | CVTrainer-INFO: Avg. train loss: 0.18940255045890808
2020-08-26 12:38:28,395 | CVTrainer-INFO: Avg. validation loss: 0.23701635003089905
2020-08-26 12:38:28,395 | CVTrainer-INFO: Saving checkpoint ...
2020-08-26 12:38:28,409 | CVTrainer-INFO: Starting epoch 3
2020-08-26 12:41:42,782 | CVTrainer-INFO: Validating ...
2020-08-26 12:41:48,714 | CVTrainer-INFO: Epoch 3 finished --> Elapsed Time: 200.30451310239732s
2020-08-26 12:41:48,714 | CVTrainer-INFO: Avg. train loss: 0.17772901058197021
2020-08-26 12:41:48,714 | CVTrainer-INFO: Avg. validation loss: 0.2609305679798126
2020-08-26 12:41:48,715 | CVTrainer-INFO: Saving checkpoint ...
2020-08-26 12:41:48,729 | CVTrainer-INFO: Starting epoch 4
2020-08-26 12:45:03,746 | CVTrainer-INFO: Validating ...
2020-08-26 12:45:09,701 | CVTrainer-INFO: Epoch 4 finished --> Elapsed Time: 200.97160248598084s
2020-08-26 12:45:09,701 | CVTrainer-INFO: Avg. train loss: 0.1716221570968628
2020-08-26 12:45:09,701 | CVTrainer-INFO: Avg. validation loss: 0.23233367502689362
2020-08-26 12:45:09,701 | CVTrainer-INFO: Saving checkpoint ...
2020-08-26 12:45:09,716 | CVTrainer-INFO: Starting epoch 5
2020-08-26 12:48:25,107 | CVTrainer-INFO: Validating ...
2020-08-26 12:48:31,149 | CVTrainer-INFO: Epoch 5 finished --> Elapsed Time: 201.433155762963s
2020-08-26 12:48:31,150 | CVTrainer-INFO: Avg. train loss: 0.1688261777162552
2020-08-26 12:48:31,150 | CVTrainer-INFO: Avg. validation loss: 0.20771251618862152
2020-08-26 12:48:31,150 | CVTrainer-INFO: Saving checkpoint ...
2020-08-26 12:48:31,165 | CVTrainer-INFO: Starting epoch 6
2020-08-26 12:51:45,721 | CVTrainer-INFO: Validating ...
2020-08-26 12:51:51,702 | CVTrainer-INFO: Epoch 6 finished --> Elapsed Time: 200.53616069629788s
2020-08-26 12:51:51,702 | CVTrainer-INFO: Avg. train loss: 0.15909604728221893
2020-08-26 12:51:51,702 | CVTrainer-INFO: Avg. validation loss: 0.19794371724128723
2020-08-26 12:51:51,703 | CVTrainer-INFO: Saving checkpoint ...
2020-08-26 12:51:51,717 | CVTrainer-INFO: Starting epoch 7
2020-08-26 12:55:06,390 | CVTrainer-INFO: Validating ...
2020-08-26 12:55:12,322 | CVTrainer-INFO: Epoch 7 finished --> Elapsed Time: 200.6049812627025s
2020-08-26 12:55:12,323 | CVTrainer-INFO: Avg. train loss: 0.15690025687217712
2020-08-26 12:55:12,323 | CVTrainer-INFO: Avg. validation loss: 0.2224254012107849
2020-08-26 12:55:12,323 | CVTrainer-INFO: Saving checkpoint ...
2020-08-26 12:55:12,339 | CVTrainer-INFO: Starting epoch 8
2020-08-26 12:58:27,536 | CVTrainer-INFO: Validating ...
2020-08-26 12:58:33,508 | CVTrainer-INFO: Epoch 8 finished --> Elapsed Time: 201.16796332783997s
2020-08-26 12:58:33,508 | CVTrainer-INFO: Avg. train loss: 0.14859440922737122
2020-08-26 12:58:33,508 | CVTrainer-INFO: Avg. validation loss: 0.19529619812965393
2020-08-26 12:58:33,509 | CVTrainer-INFO: Saving checkpoint ...
2020-08-26 12:58:33,525 | CVTrainer-INFO: Starting epoch 9
2020-08-26 13:01:48,056 | CVTrainer-INFO: Validating ...
2020-08-26 13:01:53,993 | CVTrainer-INFO: Epoch 9 finished --> Elapsed Time: 200.46780417812988s
2020-08-26 13:01:53,993 | CVTrainer-INFO: Avg. train loss: 0.14743545651435852
2020-08-26 13:01:53,993 | CVTrainer-INFO: Avg. validation loss: 0.21541838347911835
2020-08-26 13:01:53,994 | CVTrainer-INFO: Saving checkpoint ...
2020-08-26 13:01:54,007 | CVTrainer-INFO: Finished training on Fold 6.
