2020-08-26 10:14:42,101 | CVTrainer-INFO: Successfully initialized.
2020-08-26 10:14:42,102 | CVTrainer-INFO: Model: CifarSEResNet(
  (conv1): Conv2d(3, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
  (bn1): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (relu): ReLU(inplace=True)
  (layer1): Sequential(
    (0): CifarSEBasicBlock(
      (conv1): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (se): SELayer(
        (avg_pool): AdaptiveAvgPool2d(output_size=1)
        (fc): Sequential(
          (0): Linear(in_features=16, out_features=1, bias=False)
          (1): ReLU(inplace=True)
          (2): Linear(in_features=1, out_features=16, bias=False)
          (3): Sigmoid()
        )
      )
    )
    (1): CifarSEBasicBlock(
      (conv1): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (se): SELayer(
        (avg_pool): AdaptiveAvgPool2d(output_size=1)
        (fc): Sequential(
          (0): Linear(in_features=16, out_features=1, bias=False)
          (1): ReLU(inplace=True)
          (2): Linear(in_features=1, out_features=16, bias=False)
          (3): Sigmoid()
        )
      )
    )
    (2): CifarSEBasicBlock(
      (conv1): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (se): SELayer(
        (avg_pool): AdaptiveAvgPool2d(output_size=1)
        (fc): Sequential(
          (0): Linear(in_features=16, out_features=1, bias=False)
          (1): ReLU(inplace=True)
          (2): Linear(in_features=1, out_features=16, bias=False)
          (3): Sigmoid()
        )
      )
    )
  )
  (layer2): Sequential(
    (0): CifarSEBasicBlock(
      (conv1): Conv2d(16, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (se): SELayer(
        (avg_pool): AdaptiveAvgPool2d(output_size=1)
        (fc): Sequential(
          (0): Linear(in_features=32, out_features=2, bias=False)
          (1): ReLU(inplace=True)
          (2): Linear(in_features=2, out_features=32, bias=False)
          (3): Sigmoid()
        )
      )
      (downsample): Sequential(
        (0): Conv2d(16, 32, kernel_size=(1, 1), stride=(2, 2), bias=False)
        (1): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (1): CifarSEBasicBlock(
      (conv1): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (se): SELayer(
        (avg_pool): AdaptiveAvgPool2d(output_size=1)
        (fc): Sequential(
          (0): Linear(in_features=32, out_features=2, bias=False)
          (1): ReLU(inplace=True)
          (2): Linear(in_features=2, out_features=32, bias=False)
          (3): Sigmoid()
        )
      )
    )
    (2): CifarSEBasicBlock(
      (conv1): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (se): SELayer(
        (avg_pool): AdaptiveAvgPool2d(output_size=1)
        (fc): Sequential(
          (0): Linear(in_features=32, out_features=2, bias=False)
          (1): ReLU(inplace=True)
          (2): Linear(in_features=2, out_features=32, bias=False)
          (3): Sigmoid()
        )
      )
    )
  )
  (layer3): Sequential(
    (0): CifarSEBasicBlock(
      (conv1): Conv2d(32, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (se): SELayer(
        (avg_pool): AdaptiveAvgPool2d(output_size=1)
        (fc): Sequential(
          (0): Linear(in_features=64, out_features=4, bias=False)
          (1): ReLU(inplace=True)
          (2): Linear(in_features=4, out_features=64, bias=False)
          (3): Sigmoid()
        )
      )
      (downsample): Sequential(
        (0): Conv2d(32, 64, kernel_size=(1, 1), stride=(2, 2), bias=False)
        (1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (1): CifarSEBasicBlock(
      (conv1): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (se): SELayer(
        (avg_pool): AdaptiveAvgPool2d(output_size=1)
        (fc): Sequential(
          (0): Linear(in_features=64, out_features=4, bias=False)
          (1): ReLU(inplace=True)
          (2): Linear(in_features=4, out_features=64, bias=False)
          (3): Sigmoid()
        )
      )
    )
    (2): CifarSEBasicBlock(
      (conv1): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (se): SELayer(
        (avg_pool): AdaptiveAvgPool2d(output_size=1)
        (fc): Sequential(
          (0): Linear(in_features=64, out_features=4, bias=False)
          (1): ReLU(inplace=True)
          (2): Linear(in_features=4, out_features=64, bias=False)
          (3): Sigmoid()
        )
      )
    )
  )
  (avgpool): AdaptiveAvgPool2d(output_size=1)
  (fc): Linear(in_features=64, out_features=4, bias=True)
)
2020-08-26 10:14:42,102 | CVTrainer-INFO: Optimizer: SGD (
Parameter Group 0
    dampening: 0
    initial_lr: 0.1
    lr: 0.1
    momentum: 0.9
    nesterov: False
    weight_decay: 0.0001
)
2020-08-26 10:14:42,103 | CVTrainer-INFO: Criterion: <function cross_entropy at 0x7ff0ffed69d8>
2020-08-26 10:14:42,573 | CVTrainer-INFO: Number of total data: 81718
2020-08-26 10:14:42,573 | CVTrainer-INFO: ##### Training Configuration #####
2020-08-26 10:14:42,573 | CVTrainer-INFO: device ---> cuda
2020-08-26 10:14:42,573 | CVTrainer-INFO: epochs ---> 10
2020-08-26 10:14:42,574 | CVTrainer-INFO: batches_per_epoch ---> 1400
2020-08-26 10:14:42,574 | CVTrainer-INFO: batch_size ---> 64
2020-08-26 10:14:42,574 | CVTrainer-INFO: num_workers ---> 2
2020-08-26 10:14:42,574 | CVTrainer-INFO: output_folder ---> se_net_trained/fold_2
2020-08-26 10:14:42,574 | CVTrainer-INFO: validation_split ---> 0.1
2020-08-26 10:14:42,574 | CVTrainer-INFO: validation_indices --->  [8051, 79237, 39958 ... 64229, 71895, 77048]
2020-08-26 10:14:42,574 | CVTrainer-INFO: prefetch_validation ---> False
2020-08-26 10:14:42,574 | CVTrainer-INFO: amp ---> False
2020-08-26 10:14:42,574 | CVTrainer-INFO: log_level ---> INFO
2020-08-26 10:14:42,574 | CVTrainer-INFO: early_stopping_patience ---> 0
2020-08-26 10:14:42,574 | CVTrainer-INFO: finished_fold ---> False
2020-08-26 10:14:42,574 | CVTrainer-INFO: ##### Training Configuration #####
2020-08-26 10:14:42,574 | CVTrainer-INFO: Using GPU "TITAN Xp COLLECTORS EDITION" for training.
2020-08-26 10:14:42,574 | CVTrainer-INFO: Starting training.
2020-08-26 10:14:42,575 | CVTrainer-INFO: Automatic Mixed Precision is DISABLED
2020-08-26 10:14:42,575 | CVTrainer-INFO: Starting epoch 0
2020-08-26 10:17:56,279 | CVTrainer-INFO: Validating ...
2020-08-26 10:18:02,229 | CVTrainer-INFO: Epoch 0 finished --> Elapsed Time: 199.65450011007488s
2020-08-26 10:18:02,230 | CVTrainer-INFO: Avg. train loss: 0.2639167010784149
2020-08-26 10:18:02,230 | CVTrainer-INFO: Avg. validation loss: 0.4075029492378235
2020-08-26 10:18:02,230 | CVTrainer-INFO: Saving checkpoint ...
2020-08-26 10:18:02,244 | CVTrainer-INFO: Starting epoch 1
2020-08-26 10:21:17,283 | CVTrainer-INFO: Validating ...
2020-08-26 10:21:23,302 | CVTrainer-INFO: Epoch 1 finished --> Elapsed Time: 201.05788087891415s
2020-08-26 10:21:23,303 | CVTrainer-INFO: Avg. train loss: 0.20426400005817413
2020-08-26 10:21:23,303 | CVTrainer-INFO: Avg. validation loss: 2.070436716079712
2020-08-26 10:21:23,304 | CVTrainer-INFO: Saving checkpoint ...
2020-08-26 10:21:23,321 | CVTrainer-INFO: Starting epoch 2
2020-08-26 10:24:38,516 | CVTrainer-INFO: Validating ...
2020-08-26 10:24:44,393 | CVTrainer-INFO: Epoch 2 finished --> Elapsed Time: 201.07214847300202s
2020-08-26 10:24:44,394 | CVTrainer-INFO: Avg. train loss: 0.19800768792629242
2020-08-26 10:24:44,394 | CVTrainer-INFO: Avg. validation loss: 0.2495621293783188
2020-08-26 10:24:44,394 | CVTrainer-INFO: Saving checkpoint ...
2020-08-26 10:24:44,410 | CVTrainer-INFO: Starting epoch 3
2020-08-26 10:27:58,804 | CVTrainer-INFO: Validating ...
2020-08-26 10:28:04,749 | CVTrainer-INFO: Epoch 3 finished --> Elapsed Time: 200.3384532458149s
2020-08-26 10:28:04,749 | CVTrainer-INFO: Avg. train loss: 0.18432079255580902
2020-08-26 10:28:04,750 | CVTrainer-INFO: Avg. validation loss: 0.2477969080209732
2020-08-26 10:28:04,750 | CVTrainer-INFO: Saving checkpoint ...
2020-08-26 10:28:04,768 | CVTrainer-INFO: Starting epoch 4
2020-08-26 10:31:20,183 | CVTrainer-INFO: Validating ...
2020-08-26 10:31:26,216 | CVTrainer-INFO: Epoch 4 finished --> Elapsed Time: 201.44741810066625s
2020-08-26 10:31:26,216 | CVTrainer-INFO: Avg. train loss: 0.1754516214132309
2020-08-26 10:31:26,216 | CVTrainer-INFO: Avg. validation loss: 0.2145000547170639
2020-08-26 10:31:26,216 | CVTrainer-INFO: Saving checkpoint ...
2020-08-26 10:31:26,226 | CVTrainer-INFO: Starting epoch 5
2020-08-26 10:34:41,172 | CVTrainer-INFO: Validating ...
2020-08-26 10:34:47,160 | CVTrainer-INFO: Epoch 5 finished --> Elapsed Time: 200.93381516309455s
2020-08-26 10:34:47,161 | CVTrainer-INFO: Avg. train loss: 0.17086635529994965
2020-08-26 10:34:47,161 | CVTrainer-INFO: Avg. validation loss: 0.25207677483558655
2020-08-26 10:34:47,162 | CVTrainer-INFO: Saving checkpoint ...
2020-08-26 10:34:47,178 | CVTrainer-INFO: Starting epoch 6
2020-08-26 10:38:02,258 | CVTrainer-INFO: Validating ...
2020-08-26 10:38:08,312 | CVTrainer-INFO: Epoch 6 finished --> Elapsed Time: 201.1333282403648s
2020-08-26 10:38:08,312 | CVTrainer-INFO: Avg. train loss: 0.1687149852514267
2020-08-26 10:38:08,313 | CVTrainer-INFO: Avg. validation loss: 0.22443151473999023
2020-08-26 10:38:08,313 | CVTrainer-INFO: Saving checkpoint ...
2020-08-26 10:38:08,326 | CVTrainer-INFO: Starting epoch 7
2020-08-26 10:41:21,430 | CVTrainer-INFO: Validating ...
2020-08-26 10:41:27,334 | CVTrainer-INFO: Epoch 7 finished --> Elapsed Time: 199.007006037049s
2020-08-26 10:41:27,334 | CVTrainer-INFO: Avg. train loss: 0.16457468271255493
2020-08-26 10:41:27,334 | CVTrainer-INFO: Avg. validation loss: 0.25146403908729553
2020-08-26 10:41:27,335 | CVTrainer-INFO: Saving checkpoint ...
2020-08-26 10:41:27,350 | CVTrainer-INFO: Starting epoch 8
2020-08-26 10:44:40,275 | CVTrainer-INFO: Validating ...
2020-08-26 10:44:46,156 | CVTrainer-INFO: Epoch 8 finished --> Elapsed Time: 198.8064943519421s
2020-08-26 10:44:46,157 | CVTrainer-INFO: Avg. train loss: 0.16290339827537537
2020-08-26 10:44:46,157 | CVTrainer-INFO: Avg. validation loss: 0.21295371651649475
2020-08-26 10:44:46,157 | CVTrainer-INFO: Saving checkpoint ...
2020-08-26 10:44:46,174 | CVTrainer-INFO: Starting epoch 9
2020-08-26 10:47:59,790 | CVTrainer-INFO: Validating ...
2020-08-26 10:48:05,738 | CVTrainer-INFO: Epoch 9 finished --> Elapsed Time: 199.56383961997926s
2020-08-26 10:48:05,738 | CVTrainer-INFO: Avg. train loss: 0.16059471666812897
2020-08-26 10:48:05,738 | CVTrainer-INFO: Avg. validation loss: 0.9653787612915039
2020-08-26 10:48:05,739 | CVTrainer-INFO: Saving checkpoint ...
2020-08-26 10:48:05,755 | CVTrainer-INFO: Finished training on Fold 2.
