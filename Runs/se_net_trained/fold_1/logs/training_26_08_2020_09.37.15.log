2020-08-26 09:37:16,444 | CVTrainer-INFO: Successfully initialized.
2020-08-26 09:37:16,445 | CVTrainer-INFO: Model: CifarSEResNet(
  (conv1): Conv2d(3, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
  (bn1): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (relu): ReLU(inplace=True)
  (layer1): Sequential(
    (0): CifarSEBasicBlock(
      (conv1): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (se): SELayer(
        (avg_pool): AdaptiveAvgPool2d(output_size=1)
        (fc): Sequential(
          (0): Linear(in_features=16, out_features=1, bias=False)
          (1): ReLU(inplace=True)
          (2): Linear(in_features=1, out_features=16, bias=False)
          (3): Sigmoid()
        )
      )
    )
    (1): CifarSEBasicBlock(
      (conv1): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (se): SELayer(
        (avg_pool): AdaptiveAvgPool2d(output_size=1)
        (fc): Sequential(
          (0): Linear(in_features=16, out_features=1, bias=False)
          (1): ReLU(inplace=True)
          (2): Linear(in_features=1, out_features=16, bias=False)
          (3): Sigmoid()
        )
      )
    )
    (2): CifarSEBasicBlock(
      (conv1): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (se): SELayer(
        (avg_pool): AdaptiveAvgPool2d(output_size=1)
        (fc): Sequential(
          (0): Linear(in_features=16, out_features=1, bias=False)
          (1): ReLU(inplace=True)
          (2): Linear(in_features=1, out_features=16, bias=False)
          (3): Sigmoid()
        )
      )
    )
  )
  (layer2): Sequential(
    (0): CifarSEBasicBlock(
      (conv1): Conv2d(16, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (se): SELayer(
        (avg_pool): AdaptiveAvgPool2d(output_size=1)
        (fc): Sequential(
          (0): Linear(in_features=32, out_features=2, bias=False)
          (1): ReLU(inplace=True)
          (2): Linear(in_features=2, out_features=32, bias=False)
          (3): Sigmoid()
        )
      )
      (downsample): Sequential(
        (0): Conv2d(16, 32, kernel_size=(1, 1), stride=(2, 2), bias=False)
        (1): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (1): CifarSEBasicBlock(
      (conv1): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (se): SELayer(
        (avg_pool): AdaptiveAvgPool2d(output_size=1)
        (fc): Sequential(
          (0): Linear(in_features=32, out_features=2, bias=False)
          (1): ReLU(inplace=True)
          (2): Linear(in_features=2, out_features=32, bias=False)
          (3): Sigmoid()
        )
      )
    )
    (2): CifarSEBasicBlock(
      (conv1): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (se): SELayer(
        (avg_pool): AdaptiveAvgPool2d(output_size=1)
        (fc): Sequential(
          (0): Linear(in_features=32, out_features=2, bias=False)
          (1): ReLU(inplace=True)
          (2): Linear(in_features=2, out_features=32, bias=False)
          (3): Sigmoid()
        )
      )
    )
  )
  (layer3): Sequential(
    (0): CifarSEBasicBlock(
      (conv1): Conv2d(32, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (se): SELayer(
        (avg_pool): AdaptiveAvgPool2d(output_size=1)
        (fc): Sequential(
          (0): Linear(in_features=64, out_features=4, bias=False)
          (1): ReLU(inplace=True)
          (2): Linear(in_features=4, out_features=64, bias=False)
          (3): Sigmoid()
        )
      )
      (downsample): Sequential(
        (0): Conv2d(32, 64, kernel_size=(1, 1), stride=(2, 2), bias=False)
        (1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (1): CifarSEBasicBlock(
      (conv1): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (se): SELayer(
        (avg_pool): AdaptiveAvgPool2d(output_size=1)
        (fc): Sequential(
          (0): Linear(in_features=64, out_features=4, bias=False)
          (1): ReLU(inplace=True)
          (2): Linear(in_features=4, out_features=64, bias=False)
          (3): Sigmoid()
        )
      )
    )
    (2): CifarSEBasicBlock(
      (conv1): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (se): SELayer(
        (avg_pool): AdaptiveAvgPool2d(output_size=1)
        (fc): Sequential(
          (0): Linear(in_features=64, out_features=4, bias=False)
          (1): ReLU(inplace=True)
          (2): Linear(in_features=4, out_features=64, bias=False)
          (3): Sigmoid()
        )
      )
    )
  )
  (avgpool): AdaptiveAvgPool2d(output_size=1)
  (fc): Linear(in_features=64, out_features=4, bias=True)
)
2020-08-26 09:37:16,445 | CVTrainer-INFO: Optimizer: SGD (
Parameter Group 0
    dampening: 0
    initial_lr: 0.1
    lr: 0.1
    momentum: 0.9
    nesterov: False
    weight_decay: 0.0001
)
2020-08-26 09:37:16,445 | CVTrainer-INFO: Criterion: <function cross_entropy at 0x7f3976dd29d8>
2020-08-26 09:37:16,909 | CVTrainer-INFO: Number of total data: 81718
2020-08-26 09:37:16,909 | CVTrainer-INFO: ##### Training Configuration #####
2020-08-26 09:37:16,909 | CVTrainer-INFO: device ---> cuda
2020-08-26 09:37:16,909 | CVTrainer-INFO: epochs ---> 10
2020-08-26 09:37:16,909 | CVTrainer-INFO: batches_per_epoch ---> 140
2020-08-26 09:37:16,909 | CVTrainer-INFO: batch_size ---> 64
2020-08-26 09:37:16,909 | CVTrainer-INFO: num_workers ---> 2
2020-08-26 09:37:16,909 | CVTrainer-INFO: output_folder ---> se_net_trained/fold_1
2020-08-26 09:37:16,909 | CVTrainer-INFO: validation_split ---> 0.1
2020-08-26 09:37:16,910 | CVTrainer-INFO: validation_indices --->  [40784, 16637, 43100 ... 61925, 74411, 25746]
2020-08-26 09:37:16,910 | CVTrainer-INFO: prefetch_validation ---> False
2020-08-26 09:37:16,910 | CVTrainer-INFO: amp ---> False
2020-08-26 09:37:16,910 | CVTrainer-INFO: log_level ---> INFO
2020-08-26 09:37:16,910 | CVTrainer-INFO: early_stopping_patience ---> 0
2020-08-26 09:37:16,910 | CVTrainer-INFO: ##### Training Configuration #####
2020-08-26 09:37:16,919 | CVTrainer-INFO: Using GPU "TITAN Xp COLLECTORS EDITION" for training.
2020-08-26 09:37:16,919 | CVTrainer-INFO: Starting training.
2020-08-26 09:37:16,919 | CVTrainer-INFO: Automatic Mixed Precision is DISABLED
2020-08-26 09:37:16,920 | CVTrainer-INFO: Starting epoch 0
2020-08-26 09:37:39,931 | CVTrainer-INFO: Validating ...
2020-08-26 09:37:45,900 | CVTrainer-INFO: Epoch 0 finished --> Elapsed Time: 28.980539317708462s
2020-08-26 09:37:45,900 | CVTrainer-INFO: Avg. train loss: 0.5266672372817993
2020-08-26 09:37:45,901 | CVTrainer-INFO: Avg. validation loss: 33.80860137939453
2020-08-26 09:37:45,901 | CVTrainer-INFO: Saving checkpoint ...
2020-08-26 09:37:45,911 | CVTrainer-INFO: Starting epoch 1
2020-08-26 09:38:08,712 | CVTrainer-INFO: Validating ...
2020-08-26 09:38:14,743 | CVTrainer-INFO: Epoch 1 finished --> Elapsed Time: 28.831334058661014s
2020-08-26 09:38:14,743 | CVTrainer-INFO: Avg. train loss: 0.34883126616477966
2020-08-26 09:38:14,743 | CVTrainer-INFO: Avg. validation loss: 0.3601122796535492
2020-08-26 09:38:14,743 | CVTrainer-INFO: Saving checkpoint ...
2020-08-26 09:38:14,756 | CVTrainer-INFO: Starting epoch 2
2020-08-26 09:38:38,440 | CVTrainer-INFO: Validating ...
2020-08-26 09:38:44,303 | CVTrainer-INFO: Epoch 2 finished --> Elapsed Time: 29.547053790651262s
2020-08-26 09:38:44,303 | CVTrainer-INFO: Avg. train loss: 0.2998635172843933
2020-08-26 09:38:44,303 | CVTrainer-INFO: Avg. validation loss: 0.38738563656806946
2020-08-26 09:38:44,304 | CVTrainer-INFO: Saving checkpoint ...
2020-08-26 09:38:44,317 | CVTrainer-INFO: Starting epoch 3
2020-08-26 09:39:07,838 | CVTrainer-INFO: Validating ...
2020-08-26 09:39:13,864 | CVTrainer-INFO: Epoch 3 finished --> Elapsed Time: 29.546953641343862s
2020-08-26 09:39:13,864 | CVTrainer-INFO: Avg. train loss: 0.30140289664268494
2020-08-26 09:39:13,865 | CVTrainer-INFO: Avg. validation loss: 0.3566209375858307
2020-08-26 09:39:13,865 | CVTrainer-INFO: Saving checkpoint ...
2020-08-26 09:39:13,877 | CVTrainer-INFO: Starting epoch 4
