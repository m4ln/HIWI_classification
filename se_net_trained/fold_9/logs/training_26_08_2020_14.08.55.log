2020-08-26 14:08:55,724 | CVTrainer-INFO: Successfully initialized.
2020-08-26 14:08:55,725 | CVTrainer-INFO: Model: CifarSEResNet(
  (conv1): Conv2d(3, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
  (bn1): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (relu): ReLU(inplace=True)
  (layer1): Sequential(
    (0): CifarSEBasicBlock(
      (conv1): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (se): SELayer(
        (avg_pool): AdaptiveAvgPool2d(output_size=1)
        (fc): Sequential(
          (0): Linear(in_features=16, out_features=1, bias=False)
          (1): ReLU(inplace=True)
          (2): Linear(in_features=1, out_features=16, bias=False)
          (3): Sigmoid()
        )
      )
    )
    (1): CifarSEBasicBlock(
      (conv1): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (se): SELayer(
        (avg_pool): AdaptiveAvgPool2d(output_size=1)
        (fc): Sequential(
          (0): Linear(in_features=16, out_features=1, bias=False)
          (1): ReLU(inplace=True)
          (2): Linear(in_features=1, out_features=16, bias=False)
          (3): Sigmoid()
        )
      )
    )
    (2): CifarSEBasicBlock(
      (conv1): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (se): SELayer(
        (avg_pool): AdaptiveAvgPool2d(output_size=1)
        (fc): Sequential(
          (0): Linear(in_features=16, out_features=1, bias=False)
          (1): ReLU(inplace=True)
          (2): Linear(in_features=1, out_features=16, bias=False)
          (3): Sigmoid()
        )
      )
    )
  )
  (layer2): Sequential(
    (0): CifarSEBasicBlock(
      (conv1): Conv2d(16, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (se): SELayer(
        (avg_pool): AdaptiveAvgPool2d(output_size=1)
        (fc): Sequential(
          (0): Linear(in_features=32, out_features=2, bias=False)
          (1): ReLU(inplace=True)
          (2): Linear(in_features=2, out_features=32, bias=False)
          (3): Sigmoid()
        )
      )
      (downsample): Sequential(
        (0): Conv2d(16, 32, kernel_size=(1, 1), stride=(2, 2), bias=False)
        (1): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (1): CifarSEBasicBlock(
      (conv1): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (se): SELayer(
        (avg_pool): AdaptiveAvgPool2d(output_size=1)
        (fc): Sequential(
          (0): Linear(in_features=32, out_features=2, bias=False)
          (1): ReLU(inplace=True)
          (2): Linear(in_features=2, out_features=32, bias=False)
          (3): Sigmoid()
        )
      )
    )
    (2): CifarSEBasicBlock(
      (conv1): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (se): SELayer(
        (avg_pool): AdaptiveAvgPool2d(output_size=1)
        (fc): Sequential(
          (0): Linear(in_features=32, out_features=2, bias=False)
          (1): ReLU(inplace=True)
          (2): Linear(in_features=2, out_features=32, bias=False)
          (3): Sigmoid()
        )
      )
    )
  )
  (layer3): Sequential(
    (0): CifarSEBasicBlock(
      (conv1): Conv2d(32, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (se): SELayer(
        (avg_pool): AdaptiveAvgPool2d(output_size=1)
        (fc): Sequential(
          (0): Linear(in_features=64, out_features=4, bias=False)
          (1): ReLU(inplace=True)
          (2): Linear(in_features=4, out_features=64, bias=False)
          (3): Sigmoid()
        )
      )
      (downsample): Sequential(
        (0): Conv2d(32, 64, kernel_size=(1, 1), stride=(2, 2), bias=False)
        (1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (1): CifarSEBasicBlock(
      (conv1): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (se): SELayer(
        (avg_pool): AdaptiveAvgPool2d(output_size=1)
        (fc): Sequential(
          (0): Linear(in_features=64, out_features=4, bias=False)
          (1): ReLU(inplace=True)
          (2): Linear(in_features=4, out_features=64, bias=False)
          (3): Sigmoid()
        )
      )
    )
    (2): CifarSEBasicBlock(
      (conv1): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (se): SELayer(
        (avg_pool): AdaptiveAvgPool2d(output_size=1)
        (fc): Sequential(
          (0): Linear(in_features=64, out_features=4, bias=False)
          (1): ReLU(inplace=True)
          (2): Linear(in_features=4, out_features=64, bias=False)
          (3): Sigmoid()
        )
      )
    )
  )
  (avgpool): AdaptiveAvgPool2d(output_size=1)
  (fc): Linear(in_features=64, out_features=4, bias=True)
)
2020-08-26 14:08:55,725 | CVTrainer-INFO: Optimizer: SGD (
Parameter Group 0
    dampening: 0
    initial_lr: 0.1
    lr: 0.1
    momentum: 0.9
    nesterov: False
    weight_decay: 0.0001
)
2020-08-26 14:08:55,725 | CVTrainer-INFO: Criterion: <function cross_entropy at 0x7ff0ffed69d8>
2020-08-26 14:08:56,192 | CVTrainer-INFO: Number of total data: 81718
2020-08-26 14:08:56,192 | CVTrainer-INFO: ##### Training Configuration #####
2020-08-26 14:08:56,192 | CVTrainer-INFO: device ---> cuda
2020-08-26 14:08:56,192 | CVTrainer-INFO: epochs ---> 10
2020-08-26 14:08:56,192 | CVTrainer-INFO: batches_per_epoch ---> 1400
2020-08-26 14:08:56,192 | CVTrainer-INFO: batch_size ---> 64
2020-08-26 14:08:56,192 | CVTrainer-INFO: num_workers ---> 2
2020-08-26 14:08:56,192 | CVTrainer-INFO: output_folder ---> se_net_trained/fold_9
2020-08-26 14:08:56,192 | CVTrainer-INFO: validation_split ---> 0.1
2020-08-26 14:08:56,192 | CVTrainer-INFO: validation_indices --->  [11643, 37753, 24998 ... 74524, 22484, 41532]
2020-08-26 14:08:56,192 | CVTrainer-INFO: prefetch_validation ---> False
2020-08-26 14:08:56,192 | CVTrainer-INFO: amp ---> False
2020-08-26 14:08:56,192 | CVTrainer-INFO: log_level ---> INFO
2020-08-26 14:08:56,192 | CVTrainer-INFO: early_stopping_patience ---> 0
2020-08-26 14:08:56,193 | CVTrainer-INFO: finished_fold ---> False
2020-08-26 14:08:56,193 | CVTrainer-INFO: ##### Training Configuration #####
2020-08-26 14:08:56,193 | CVTrainer-INFO: Using GPU "TITAN Xp COLLECTORS EDITION" for training.
2020-08-26 14:08:56,193 | CVTrainer-INFO: Starting training.
2020-08-26 14:08:56,193 | CVTrainer-INFO: Automatic Mixed Precision is DISABLED
2020-08-26 14:08:56,193 | CVTrainer-INFO: Starting epoch 0
2020-08-26 14:12:12,017 | CVTrainer-INFO: Validating ...
2020-08-26 14:12:18,136 | CVTrainer-INFO: Epoch 0 finished --> Elapsed Time: 201.94289199262857s
2020-08-26 14:12:18,136 | CVTrainer-INFO: Avg. train loss: 0.2626102864742279
2020-08-26 14:12:18,137 | CVTrainer-INFO: Avg. validation loss: 8.08525276184082
2020-08-26 14:12:18,137 | CVTrainer-INFO: Saving checkpoint ...
2020-08-26 14:12:18,154 | CVTrainer-INFO: Starting epoch 1
2020-08-26 14:15:32,522 | CVTrainer-INFO: Validating ...
2020-08-26 14:15:38,535 | CVTrainer-INFO: Epoch 1 finished --> Elapsed Time: 200.3804577179253s
2020-08-26 14:15:38,535 | CVTrainer-INFO: Avg. train loss: 0.20617187023162842
2020-08-26 14:15:38,536 | CVTrainer-INFO: Avg. validation loss: 0.42449674010276794
2020-08-26 14:15:38,536 | CVTrainer-INFO: Saving checkpoint ...
2020-08-26 14:15:38,552 | CVTrainer-INFO: Starting epoch 2
2020-08-26 14:18:53,564 | CVTrainer-INFO: Validating ...
2020-08-26 14:18:59,514 | CVTrainer-INFO: Epoch 2 finished --> Elapsed Time: 200.96178528526798s
2020-08-26 14:18:59,514 | CVTrainer-INFO: Avg. train loss: 0.18992336094379425
2020-08-26 14:18:59,515 | CVTrainer-INFO: Avg. validation loss: 0.2757143974304199
2020-08-26 14:18:59,515 | CVTrainer-INFO: Saving checkpoint ...
2020-08-26 14:18:59,531 | CVTrainer-INFO: Starting epoch 3
2020-08-26 14:22:13,350 | CVTrainer-INFO: Validating ...
2020-08-26 14:22:19,328 | CVTrainer-INFO: Epoch 3 finished --> Elapsed Time: 199.79672726104036s
2020-08-26 14:22:19,328 | CVTrainer-INFO: Avg. train loss: 0.18177078664302826
2020-08-26 14:22:19,329 | CVTrainer-INFO: Avg. validation loss: 0.22052140533924103
2020-08-26 14:22:19,329 | CVTrainer-INFO: Saving checkpoint ...
2020-08-26 14:22:19,342 | CVTrainer-INFO: Starting epoch 4
2020-08-26 14:25:34,970 | CVTrainer-INFO: Validating ...
2020-08-26 14:25:40,986 | CVTrainer-INFO: Epoch 4 finished --> Elapsed Time: 201.6428438583389s
2020-08-26 14:25:40,986 | CVTrainer-INFO: Avg. train loss: 0.1762712150812149
2020-08-26 14:25:40,986 | CVTrainer-INFO: Avg. validation loss: 0.5779899954795837
2020-08-26 14:25:40,987 | CVTrainer-INFO: Saving checkpoint ...
2020-08-26 14:25:41,004 | CVTrainer-INFO: Starting epoch 5
2020-08-26 14:28:55,837 | CVTrainer-INFO: Validating ...
2020-08-26 14:29:01,812 | CVTrainer-INFO: Epoch 5 finished --> Elapsed Time: 200.8076653094031s
2020-08-26 14:29:01,813 | CVTrainer-INFO: Avg. train loss: 0.17112652957439423
2020-08-26 14:29:01,813 | CVTrainer-INFO: Avg. validation loss: 0.2537067234516144
2020-08-26 14:29:01,813 | CVTrainer-INFO: Saving checkpoint ...
2020-08-26 14:29:01,829 | CVTrainer-INFO: Starting epoch 6
2020-08-26 14:32:17,294 | CVTrainer-INFO: Validating ...
2020-08-26 14:32:23,382 | CVTrainer-INFO: Epoch 6 finished --> Elapsed Time: 201.55266176816076s
2020-08-26 14:32:23,382 | CVTrainer-INFO: Avg. train loss: 0.16880394518375397
2020-08-26 14:32:23,382 | CVTrainer-INFO: Avg. validation loss: 1.220966100692749
2020-08-26 14:32:23,382 | CVTrainer-INFO: Saving checkpoint ...
2020-08-26 14:32:23,394 | CVTrainer-INFO: Starting epoch 7
2020-08-26 14:35:39,057 | CVTrainer-INFO: Validating ...
2020-08-26 14:35:45,022 | CVTrainer-INFO: Epoch 7 finished --> Elapsed Time: 201.62727759918198s
2020-08-26 14:35:45,022 | CVTrainer-INFO: Avg. train loss: 0.16386911273002625
2020-08-26 14:35:45,023 | CVTrainer-INFO: Avg. validation loss: 1.0616397857666016
2020-08-26 14:35:45,023 | CVTrainer-INFO: Saving checkpoint ...
2020-08-26 14:35:45,041 | CVTrainer-INFO: Starting epoch 8
2020-08-26 14:38:59,843 | CVTrainer-INFO: Validating ...
2020-08-26 14:39:05,740 | CVTrainer-INFO: Epoch 8 finished --> Elapsed Time: 200.69812280032784s
2020-08-26 14:39:05,740 | CVTrainer-INFO: Avg. train loss: 0.16327711939811707
2020-08-26 14:39:05,741 | CVTrainer-INFO: Avg. validation loss: 0.2297811508178711
2020-08-26 14:39:05,741 | CVTrainer-INFO: Saving checkpoint ...
2020-08-26 14:39:05,757 | CVTrainer-INFO: Starting epoch 9
2020-08-26 14:42:20,568 | CVTrainer-INFO: Validating ...
2020-08-26 14:42:26,622 | CVTrainer-INFO: Epoch 9 finished --> Elapsed Time: 200.86481848778203s
2020-08-26 14:42:26,622 | CVTrainer-INFO: Avg. train loss: 0.16093780100345612
2020-08-26 14:42:26,622 | CVTrainer-INFO: Avg. validation loss: 0.19977039098739624
2020-08-26 14:42:26,623 | CVTrainer-INFO: Saving checkpoint ...
2020-08-26 14:42:26,639 | CVTrainer-INFO: Finished training on Fold 9.
