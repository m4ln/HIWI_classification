2020-08-26 10:48:05,764 | CVTrainer-INFO: Successfully initialized.
2020-08-26 10:48:05,765 | CVTrainer-INFO: Model: CifarSEResNet(
  (conv1): Conv2d(3, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
  (bn1): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (relu): ReLU(inplace=True)
  (layer1): Sequential(
    (0): CifarSEBasicBlock(
      (conv1): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (se): SELayer(
        (avg_pool): AdaptiveAvgPool2d(output_size=1)
        (fc): Sequential(
          (0): Linear(in_features=16, out_features=1, bias=False)
          (1): ReLU(inplace=True)
          (2): Linear(in_features=1, out_features=16, bias=False)
          (3): Sigmoid()
        )
      )
    )
    (1): CifarSEBasicBlock(
      (conv1): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (se): SELayer(
        (avg_pool): AdaptiveAvgPool2d(output_size=1)
        (fc): Sequential(
          (0): Linear(in_features=16, out_features=1, bias=False)
          (1): ReLU(inplace=True)
          (2): Linear(in_features=1, out_features=16, bias=False)
          (3): Sigmoid()
        )
      )
    )
    (2): CifarSEBasicBlock(
      (conv1): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (se): SELayer(
        (avg_pool): AdaptiveAvgPool2d(output_size=1)
        (fc): Sequential(
          (0): Linear(in_features=16, out_features=1, bias=False)
          (1): ReLU(inplace=True)
          (2): Linear(in_features=1, out_features=16, bias=False)
          (3): Sigmoid()
        )
      )
    )
  )
  (layer2): Sequential(
    (0): CifarSEBasicBlock(
      (conv1): Conv2d(16, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (se): SELayer(
        (avg_pool): AdaptiveAvgPool2d(output_size=1)
        (fc): Sequential(
          (0): Linear(in_features=32, out_features=2, bias=False)
          (1): ReLU(inplace=True)
          (2): Linear(in_features=2, out_features=32, bias=False)
          (3): Sigmoid()
        )
      )
      (downsample): Sequential(
        (0): Conv2d(16, 32, kernel_size=(1, 1), stride=(2, 2), bias=False)
        (1): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (1): CifarSEBasicBlock(
      (conv1): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (se): SELayer(
        (avg_pool): AdaptiveAvgPool2d(output_size=1)
        (fc): Sequential(
          (0): Linear(in_features=32, out_features=2, bias=False)
          (1): ReLU(inplace=True)
          (2): Linear(in_features=2, out_features=32, bias=False)
          (3): Sigmoid()
        )
      )
    )
    (2): CifarSEBasicBlock(
      (conv1): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (se): SELayer(
        (avg_pool): AdaptiveAvgPool2d(output_size=1)
        (fc): Sequential(
          (0): Linear(in_features=32, out_features=2, bias=False)
          (1): ReLU(inplace=True)
          (2): Linear(in_features=2, out_features=32, bias=False)
          (3): Sigmoid()
        )
      )
    )
  )
  (layer3): Sequential(
    (0): CifarSEBasicBlock(
      (conv1): Conv2d(32, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (se): SELayer(
        (avg_pool): AdaptiveAvgPool2d(output_size=1)
        (fc): Sequential(
          (0): Linear(in_features=64, out_features=4, bias=False)
          (1): ReLU(inplace=True)
          (2): Linear(in_features=4, out_features=64, bias=False)
          (3): Sigmoid()
        )
      )
      (downsample): Sequential(
        (0): Conv2d(32, 64, kernel_size=(1, 1), stride=(2, 2), bias=False)
        (1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (1): CifarSEBasicBlock(
      (conv1): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (se): SELayer(
        (avg_pool): AdaptiveAvgPool2d(output_size=1)
        (fc): Sequential(
          (0): Linear(in_features=64, out_features=4, bias=False)
          (1): ReLU(inplace=True)
          (2): Linear(in_features=4, out_features=64, bias=False)
          (3): Sigmoid()
        )
      )
    )
    (2): CifarSEBasicBlock(
      (conv1): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (se): SELayer(
        (avg_pool): AdaptiveAvgPool2d(output_size=1)
        (fc): Sequential(
          (0): Linear(in_features=64, out_features=4, bias=False)
          (1): ReLU(inplace=True)
          (2): Linear(in_features=4, out_features=64, bias=False)
          (3): Sigmoid()
        )
      )
    )
  )
  (avgpool): AdaptiveAvgPool2d(output_size=1)
  (fc): Linear(in_features=64, out_features=4, bias=True)
)
2020-08-26 10:48:05,766 | CVTrainer-INFO: Optimizer: SGD (
Parameter Group 0
    dampening: 0
    initial_lr: 0.1
    lr: 0.1
    momentum: 0.9
    nesterov: False
    weight_decay: 0.0001
)
2020-08-26 10:48:05,766 | CVTrainer-INFO: Criterion: <function cross_entropy at 0x7ff0ffed69d8>
2020-08-26 10:48:06,242 | CVTrainer-INFO: Number of total data: 81718
2020-08-26 10:48:06,242 | CVTrainer-INFO: ##### Training Configuration #####
2020-08-26 10:48:06,242 | CVTrainer-INFO: device ---> cuda
2020-08-26 10:48:06,242 | CVTrainer-INFO: epochs ---> 10
2020-08-26 10:48:06,242 | CVTrainer-INFO: batches_per_epoch ---> 1400
2020-08-26 10:48:06,242 | CVTrainer-INFO: batch_size ---> 64
2020-08-26 10:48:06,242 | CVTrainer-INFO: num_workers ---> 2
2020-08-26 10:48:06,242 | CVTrainer-INFO: output_folder ---> se_net_trained/fold_3
2020-08-26 10:48:06,242 | CVTrainer-INFO: validation_split ---> 0.1
2020-08-26 10:48:06,242 | CVTrainer-INFO: validation_indices --->  [73999, 11722, 61578 ... 22124, 18797, 8488]
2020-08-26 10:48:06,243 | CVTrainer-INFO: prefetch_validation ---> False
2020-08-26 10:48:06,243 | CVTrainer-INFO: amp ---> False
2020-08-26 10:48:06,243 | CVTrainer-INFO: log_level ---> INFO
2020-08-26 10:48:06,243 | CVTrainer-INFO: early_stopping_patience ---> 0
2020-08-26 10:48:06,243 | CVTrainer-INFO: finished_fold ---> False
2020-08-26 10:48:06,243 | CVTrainer-INFO: ##### Training Configuration #####
2020-08-26 10:48:06,243 | CVTrainer-INFO: Using GPU "TITAN Xp COLLECTORS EDITION" for training.
2020-08-26 10:48:06,243 | CVTrainer-INFO: Starting training.
2020-08-26 10:48:06,243 | CVTrainer-INFO: Automatic Mixed Precision is DISABLED
2020-08-26 10:48:06,243 | CVTrainer-INFO: Starting epoch 0
2020-08-26 10:51:20,835 | CVTrainer-INFO: Validating ...
2020-08-26 10:51:26,909 | CVTrainer-INFO: Epoch 0 finished --> Elapsed Time: 200.66525874007493s
2020-08-26 10:51:26,909 | CVTrainer-INFO: Avg. train loss: 0.2584124207496643
2020-08-26 10:51:26,909 | CVTrainer-INFO: Avg. validation loss: 0.24647235870361328
2020-08-26 10:51:26,909 | CVTrainer-INFO: Saving checkpoint ...
2020-08-26 10:51:26,925 | CVTrainer-INFO: Starting epoch 1
2020-08-26 10:54:42,126 | CVTrainer-INFO: Validating ...
2020-08-26 10:54:48,056 | CVTrainer-INFO: Epoch 1 finished --> Elapsed Time: 201.13104111980647s
2020-08-26 10:54:48,057 | CVTrainer-INFO: Avg. train loss: 0.20342211425304413
2020-08-26 10:54:48,057 | CVTrainer-INFO: Avg. validation loss: 8.870004653930664
2020-08-26 10:54:48,058 | CVTrainer-INFO: Saving checkpoint ...
2020-08-26 10:54:48,074 | CVTrainer-INFO: Starting epoch 2
2020-08-26 10:58:03,415 | CVTrainer-INFO: Validating ...
2020-08-26 10:58:09,383 | CVTrainer-INFO: Epoch 2 finished --> Elapsed Time: 201.30915455939248s
2020-08-26 10:58:09,384 | CVTrainer-INFO: Avg. train loss: 0.19312649965286255
2020-08-26 10:58:09,384 | CVTrainer-INFO: Avg. validation loss: 6.503211975097656
2020-08-26 10:58:09,384 | CVTrainer-INFO: Saving checkpoint ...
2020-08-26 10:58:09,396 | CVTrainer-INFO: Starting epoch 3
2020-08-26 11:01:24,780 | CVTrainer-INFO: Validating ...
2020-08-26 11:01:30,707 | CVTrainer-INFO: Epoch 3 finished --> Elapsed Time: 201.3108939579688s
2020-08-26 11:01:30,708 | CVTrainer-INFO: Avg. train loss: 0.18666009604930878
2020-08-26 11:01:30,708 | CVTrainer-INFO: Avg. validation loss: 0.272367388010025
2020-08-26 11:01:30,708 | CVTrainer-INFO: Saving checkpoint ...
2020-08-26 11:01:30,724 | CVTrainer-INFO: Starting epoch 4
2020-08-26 11:04:45,000 | CVTrainer-INFO: Validating ...
2020-08-26 11:04:50,922 | CVTrainer-INFO: Epoch 4 finished --> Elapsed Time: 200.19760422036052s
2020-08-26 11:04:50,922 | CVTrainer-INFO: Avg. train loss: 0.1745450496673584
2020-08-26 11:04:50,923 | CVTrainer-INFO: Avg. validation loss: 6.7646684646606445
2020-08-26 11:04:50,923 | CVTrainer-INFO: Saving checkpoint ...
2020-08-26 11:04:50,940 | CVTrainer-INFO: Starting epoch 5
2020-08-26 11:08:04,290 | CVTrainer-INFO: Validating ...
2020-08-26 11:08:10,214 | CVTrainer-INFO: Epoch 5 finished --> Elapsed Time: 199.274109153077s
2020-08-26 11:08:10,214 | CVTrainer-INFO: Avg. train loss: 0.1710851788520813
2020-08-26 11:08:10,214 | CVTrainer-INFO: Avg. validation loss: 0.2540152072906494
2020-08-26 11:08:10,215 | CVTrainer-INFO: Saving checkpoint ...
2020-08-26 11:08:10,230 | CVTrainer-INFO: Starting epoch 6
2020-08-26 11:11:24,066 | CVTrainer-INFO: Validating ...
2020-08-26 11:11:30,084 | CVTrainer-INFO: Epoch 6 finished --> Elapsed Time: 199.85366895468906s
2020-08-26 11:11:30,084 | CVTrainer-INFO: Avg. train loss: 0.1630227267742157
2020-08-26 11:11:30,085 | CVTrainer-INFO: Avg. validation loss: 0.6455730199813843
2020-08-26 11:11:30,085 | CVTrainer-INFO: Saving checkpoint ...
2020-08-26 11:11:30,102 | CVTrainer-INFO: Starting epoch 7
2020-08-26 11:14:44,340 | CVTrainer-INFO: Validating ...
2020-08-26 11:14:50,404 | CVTrainer-INFO: Epoch 7 finished --> Elapsed Time: 200.30196927674115s
2020-08-26 11:14:50,405 | CVTrainer-INFO: Avg. train loss: 0.15495853126049042
2020-08-26 11:14:50,405 | CVTrainer-INFO: Avg. validation loss: 0.6222652196884155
2020-08-26 11:14:50,405 | CVTrainer-INFO: Saving checkpoint ...
2020-08-26 11:14:50,419 | CVTrainer-INFO: Starting epoch 8
2020-08-26 11:18:05,282 | CVTrainer-INFO: Validating ...
2020-08-26 11:18:11,308 | CVTrainer-INFO: Epoch 8 finished --> Elapsed Time: 200.88915860420093s
2020-08-26 11:18:11,308 | CVTrainer-INFO: Avg. train loss: 0.14887265861034393
2020-08-26 11:18:11,309 | CVTrainer-INFO: Avg. validation loss: 0.21804940700531006
2020-08-26 11:18:11,309 | CVTrainer-INFO: Saving checkpoint ...
2020-08-26 11:18:11,326 | CVTrainer-INFO: Starting epoch 9
2020-08-26 11:21:26,658 | CVTrainer-INFO: Validating ...
2020-08-26 11:21:32,626 | CVTrainer-INFO: Epoch 9 finished --> Elapsed Time: 201.299544100184s
2020-08-26 11:21:32,627 | CVTrainer-INFO: Avg. train loss: 0.14882385730743408
2020-08-26 11:21:32,627 | CVTrainer-INFO: Avg. validation loss: 0.9010043144226074
2020-08-26 11:21:32,627 | CVTrainer-INFO: Saving checkpoint ...
2020-08-26 11:21:32,641 | CVTrainer-INFO: Finished training on Fold 3.
