2020-08-26 14:42:26,649 | CVTrainer-INFO: Successfully initialized.
2020-08-26 14:42:26,650 | CVTrainer-INFO: Model: CifarSEResNet(
  (conv1): Conv2d(3, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
  (bn1): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (relu): ReLU(inplace=True)
  (layer1): Sequential(
    (0): CifarSEBasicBlock(
      (conv1): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (se): SELayer(
        (avg_pool): AdaptiveAvgPool2d(output_size=1)
        (fc): Sequential(
          (0): Linear(in_features=16, out_features=1, bias=False)
          (1): ReLU(inplace=True)
          (2): Linear(in_features=1, out_features=16, bias=False)
          (3): Sigmoid()
        )
      )
    )
    (1): CifarSEBasicBlock(
      (conv1): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (se): SELayer(
        (avg_pool): AdaptiveAvgPool2d(output_size=1)
        (fc): Sequential(
          (0): Linear(in_features=16, out_features=1, bias=False)
          (1): ReLU(inplace=True)
          (2): Linear(in_features=1, out_features=16, bias=False)
          (3): Sigmoid()
        )
      )
    )
    (2): CifarSEBasicBlock(
      (conv1): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (se): SELayer(
        (avg_pool): AdaptiveAvgPool2d(output_size=1)
        (fc): Sequential(
          (0): Linear(in_features=16, out_features=1, bias=False)
          (1): ReLU(inplace=True)
          (2): Linear(in_features=1, out_features=16, bias=False)
          (3): Sigmoid()
        )
      )
    )
  )
  (layer2): Sequential(
    (0): CifarSEBasicBlock(
      (conv1): Conv2d(16, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (se): SELayer(
        (avg_pool): AdaptiveAvgPool2d(output_size=1)
        (fc): Sequential(
          (0): Linear(in_features=32, out_features=2, bias=False)
          (1): ReLU(inplace=True)
          (2): Linear(in_features=2, out_features=32, bias=False)
          (3): Sigmoid()
        )
      )
      (downsample): Sequential(
        (0): Conv2d(16, 32, kernel_size=(1, 1), stride=(2, 2), bias=False)
        (1): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (1): CifarSEBasicBlock(
      (conv1): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (se): SELayer(
        (avg_pool): AdaptiveAvgPool2d(output_size=1)
        (fc): Sequential(
          (0): Linear(in_features=32, out_features=2, bias=False)
          (1): ReLU(inplace=True)
          (2): Linear(in_features=2, out_features=32, bias=False)
          (3): Sigmoid()
        )
      )
    )
    (2): CifarSEBasicBlock(
      (conv1): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (se): SELayer(
        (avg_pool): AdaptiveAvgPool2d(output_size=1)
        (fc): Sequential(
          (0): Linear(in_features=32, out_features=2, bias=False)
          (1): ReLU(inplace=True)
          (2): Linear(in_features=2, out_features=32, bias=False)
          (3): Sigmoid()
        )
      )
    )
  )
  (layer3): Sequential(
    (0): CifarSEBasicBlock(
      (conv1): Conv2d(32, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (se): SELayer(
        (avg_pool): AdaptiveAvgPool2d(output_size=1)
        (fc): Sequential(
          (0): Linear(in_features=64, out_features=4, bias=False)
          (1): ReLU(inplace=True)
          (2): Linear(in_features=4, out_features=64, bias=False)
          (3): Sigmoid()
        )
      )
      (downsample): Sequential(
        (0): Conv2d(32, 64, kernel_size=(1, 1), stride=(2, 2), bias=False)
        (1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (1): CifarSEBasicBlock(
      (conv1): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (se): SELayer(
        (avg_pool): AdaptiveAvgPool2d(output_size=1)
        (fc): Sequential(
          (0): Linear(in_features=64, out_features=4, bias=False)
          (1): ReLU(inplace=True)
          (2): Linear(in_features=4, out_features=64, bias=False)
          (3): Sigmoid()
        )
      )
    )
    (2): CifarSEBasicBlock(
      (conv1): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (se): SELayer(
        (avg_pool): AdaptiveAvgPool2d(output_size=1)
        (fc): Sequential(
          (0): Linear(in_features=64, out_features=4, bias=False)
          (1): ReLU(inplace=True)
          (2): Linear(in_features=4, out_features=64, bias=False)
          (3): Sigmoid()
        )
      )
    )
  )
  (avgpool): AdaptiveAvgPool2d(output_size=1)
  (fc): Linear(in_features=64, out_features=4, bias=True)
)
2020-08-26 14:42:26,650 | CVTrainer-INFO: Optimizer: SGD (
Parameter Group 0
    dampening: 0
    initial_lr: 0.1
    lr: 0.1
    momentum: 0.9
    nesterov: False
    weight_decay: 0.0001
)
2020-08-26 14:42:26,650 | CVTrainer-INFO: Criterion: <function cross_entropy at 0x7ff0ffed69d8>
2020-08-26 14:42:27,130 | CVTrainer-INFO: Number of total data: 81718
2020-08-26 14:42:27,130 | CVTrainer-INFO: ##### Training Configuration #####
2020-08-26 14:42:27,130 | CVTrainer-INFO: device ---> cuda
2020-08-26 14:42:27,130 | CVTrainer-INFO: epochs ---> 10
2020-08-26 14:42:27,130 | CVTrainer-INFO: batches_per_epoch ---> 1400
2020-08-26 14:42:27,130 | CVTrainer-INFO: batch_size ---> 64
2020-08-26 14:42:27,130 | CVTrainer-INFO: num_workers ---> 2
2020-08-26 14:42:27,130 | CVTrainer-INFO: output_folder ---> se_net_trained/fold_10
2020-08-26 14:42:27,130 | CVTrainer-INFO: validation_split ---> 0.1
2020-08-26 14:42:27,131 | CVTrainer-INFO: validation_indices --->  [989, 47859, 31061 ... 36621, 33340, 33620]
2020-08-26 14:42:27,131 | CVTrainer-INFO: prefetch_validation ---> False
2020-08-26 14:42:27,131 | CVTrainer-INFO: amp ---> False
2020-08-26 14:42:27,131 | CVTrainer-INFO: log_level ---> INFO
2020-08-26 14:42:27,131 | CVTrainer-INFO: early_stopping_patience ---> 0
2020-08-26 14:42:27,131 | CVTrainer-INFO: finished_fold ---> False
2020-08-26 14:42:27,131 | CVTrainer-INFO: ##### Training Configuration #####
2020-08-26 14:42:27,131 | CVTrainer-INFO: Using GPU "TITAN Xp COLLECTORS EDITION" for training.
2020-08-26 14:42:27,131 | CVTrainer-INFO: Starting training.
2020-08-26 14:42:27,131 | CVTrainer-INFO: Automatic Mixed Precision is DISABLED
2020-08-26 14:42:27,131 | CVTrainer-INFO: Starting epoch 0
2020-08-26 14:45:42,701 | CVTrainer-INFO: Validating ...
2020-08-26 14:45:48,752 | CVTrainer-INFO: Epoch 0 finished --> Elapsed Time: 201.62053227517754s
2020-08-26 14:45:48,753 | CVTrainer-INFO: Avg. train loss: 0.2640707790851593
2020-08-26 14:45:48,753 | CVTrainer-INFO: Avg. validation loss: 0.30458950996398926
2020-08-26 14:45:48,753 | CVTrainer-INFO: Saving checkpoint ...
2020-08-26 14:45:48,769 | CVTrainer-INFO: Starting epoch 1
2020-08-26 14:49:04,441 | CVTrainer-INFO: Validating ...
2020-08-26 14:49:10,495 | CVTrainer-INFO: Epoch 1 finished --> Elapsed Time: 201.72521176794544s
2020-08-26 14:49:10,495 | CVTrainer-INFO: Avg. train loss: 0.2017863243818283
2020-08-26 14:49:10,495 | CVTrainer-INFO: Avg. validation loss: 0.7211655378341675
2020-08-26 14:49:10,496 | CVTrainer-INFO: Saving checkpoint ...
2020-08-26 14:49:10,506 | CVTrainer-INFO: Starting epoch 2
2020-08-26 14:52:24,994 | CVTrainer-INFO: Validating ...
2020-08-26 14:52:30,932 | CVTrainer-INFO: Epoch 2 finished --> Elapsed Time: 200.42640467733145s
2020-08-26 14:52:30,933 | CVTrainer-INFO: Avg. train loss: 0.19148577749729156
2020-08-26 14:52:30,933 | CVTrainer-INFO: Avg. validation loss: 0.2131403237581253
2020-08-26 14:52:30,933 | CVTrainer-INFO: Saving checkpoint ...
2020-08-26 14:52:30,949 | CVTrainer-INFO: Starting epoch 3
2020-08-26 14:55:44,891 | CVTrainer-INFO: Validating ...
2020-08-26 14:55:50,899 | CVTrainer-INFO: Epoch 3 finished --> Elapsed Time: 199.94979486009106s
2020-08-26 14:55:50,899 | CVTrainer-INFO: Avg. train loss: 0.17916549742221832
2020-08-26 14:55:50,900 | CVTrainer-INFO: Avg. validation loss: 0.2501927614212036
2020-08-26 14:55:50,900 | CVTrainer-INFO: Saving checkpoint ...
2020-08-26 14:55:50,909 | CVTrainer-INFO: Starting epoch 4
2020-08-26 14:59:06,489 | CVTrainer-INFO: Validating ...
2020-08-26 14:59:12,511 | CVTrainer-INFO: Epoch 4 finished --> Elapsed Time: 201.60176976490766s
2020-08-26 14:59:12,512 | CVTrainer-INFO: Avg. train loss: 0.1745912730693817
2020-08-26 14:59:12,512 | CVTrainer-INFO: Avg. validation loss: 0.20820370316505432
2020-08-26 14:59:12,513 | CVTrainer-INFO: Saving checkpoint ...
2020-08-26 14:59:12,529 | CVTrainer-INFO: Starting epoch 5
2020-08-26 15:02:27,939 | CVTrainer-INFO: Validating ...
2020-08-26 15:02:33,912 | CVTrainer-INFO: Epoch 5 finished --> Elapsed Time: 201.38362626498565s
2020-08-26 15:02:33,913 | CVTrainer-INFO: Avg. train loss: 0.17420032620429993
2020-08-26 15:02:33,913 | CVTrainer-INFO: Avg. validation loss: 0.21443860232830048
2020-08-26 15:02:33,913 | CVTrainer-INFO: Saving checkpoint ...
2020-08-26 15:02:33,929 | CVTrainer-INFO: Starting epoch 6
2020-08-26 15:05:48,614 | CVTrainer-INFO: Validating ...
2020-08-26 15:05:54,606 | CVTrainer-INFO: Epoch 6 finished --> Elapsed Time: 200.67686318513006s
2020-08-26 15:05:54,607 | CVTrainer-INFO: Avg. train loss: 0.1677071452140808
2020-08-26 15:05:54,607 | CVTrainer-INFO: Avg. validation loss: 0.4189012050628662
2020-08-26 15:05:54,607 | CVTrainer-INFO: Saving checkpoint ...
2020-08-26 15:05:54,621 | CVTrainer-INFO: Starting epoch 7
2020-08-26 15:09:08,223 | CVTrainer-INFO: Validating ...
2020-08-26 15:09:14,224 | CVTrainer-INFO: Epoch 7 finished --> Elapsed Time: 199.6025533201173s
2020-08-26 15:09:14,225 | CVTrainer-INFO: Avg. train loss: 0.1642369031906128
2020-08-26 15:09:14,225 | CVTrainer-INFO: Avg. validation loss: 0.2970113158226013
2020-08-26 15:09:14,225 | CVTrainer-INFO: Saving checkpoint ...
2020-08-26 15:09:14,241 | CVTrainer-INFO: Starting epoch 8
2020-08-26 15:12:28,938 | CVTrainer-INFO: Validating ...
2020-08-26 15:12:34,939 | CVTrainer-INFO: Epoch 8 finished --> Elapsed Time: 200.6973875318654s
2020-08-26 15:12:34,939 | CVTrainer-INFO: Avg. train loss: 0.16251689195632935
2020-08-26 15:12:34,939 | CVTrainer-INFO: Avg. validation loss: 0.6569925546646118
2020-08-26 15:12:34,939 | CVTrainer-INFO: Saving checkpoint ...
2020-08-26 15:12:34,953 | CVTrainer-INFO: Starting epoch 9
2020-08-26 15:15:50,122 | CVTrainer-INFO: Validating ...
2020-08-26 15:15:56,146 | CVTrainer-INFO: Epoch 9 finished --> Elapsed Time: 201.19282074365765s
2020-08-26 15:15:56,146 | CVTrainer-INFO: Avg. train loss: 0.16419129073619843
2020-08-26 15:15:56,146 | CVTrainer-INFO: Avg. validation loss: 1.019274353981018
2020-08-26 15:15:56,147 | CVTrainer-INFO: Saving checkpoint ...
2020-08-26 15:15:56,161 | CVTrainer-INFO: Finished training on Fold 10.
