2020-08-26 09:41:23,397 | CVTrainer-INFO: Successfully initialized.
2020-08-26 09:41:23,399 | CVTrainer-INFO: Model: CifarSEResNet(
  (conv1): Conv2d(3, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
  (bn1): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (relu): ReLU(inplace=True)
  (layer1): Sequential(
    (0): CifarSEBasicBlock(
      (conv1): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (se): SELayer(
        (avg_pool): AdaptiveAvgPool2d(output_size=1)
        (fc): Sequential(
          (0): Linear(in_features=16, out_features=1, bias=False)
          (1): ReLU(inplace=True)
          (2): Linear(in_features=1, out_features=16, bias=False)
          (3): Sigmoid()
        )
      )
    )
    (1): CifarSEBasicBlock(
      (conv1): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (se): SELayer(
        (avg_pool): AdaptiveAvgPool2d(output_size=1)
        (fc): Sequential(
          (0): Linear(in_features=16, out_features=1, bias=False)
          (1): ReLU(inplace=True)
          (2): Linear(in_features=1, out_features=16, bias=False)
          (3): Sigmoid()
        )
      )
    )
    (2): CifarSEBasicBlock(
      (conv1): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (se): SELayer(
        (avg_pool): AdaptiveAvgPool2d(output_size=1)
        (fc): Sequential(
          (0): Linear(in_features=16, out_features=1, bias=False)
          (1): ReLU(inplace=True)
          (2): Linear(in_features=1, out_features=16, bias=False)
          (3): Sigmoid()
        )
      )
    )
  )
  (layer2): Sequential(
    (0): CifarSEBasicBlock(
      (conv1): Conv2d(16, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (se): SELayer(
        (avg_pool): AdaptiveAvgPool2d(output_size=1)
        (fc): Sequential(
          (0): Linear(in_features=32, out_features=2, bias=False)
          (1): ReLU(inplace=True)
          (2): Linear(in_features=2, out_features=32, bias=False)
          (3): Sigmoid()
        )
      )
      (downsample): Sequential(
        (0): Conv2d(16, 32, kernel_size=(1, 1), stride=(2, 2), bias=False)
        (1): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (1): CifarSEBasicBlock(
      (conv1): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (se): SELayer(
        (avg_pool): AdaptiveAvgPool2d(output_size=1)
        (fc): Sequential(
          (0): Linear(in_features=32, out_features=2, bias=False)
          (1): ReLU(inplace=True)
          (2): Linear(in_features=2, out_features=32, bias=False)
          (3): Sigmoid()
        )
      )
    )
    (2): CifarSEBasicBlock(
      (conv1): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (se): SELayer(
        (avg_pool): AdaptiveAvgPool2d(output_size=1)
        (fc): Sequential(
          (0): Linear(in_features=32, out_features=2, bias=False)
          (1): ReLU(inplace=True)
          (2): Linear(in_features=2, out_features=32, bias=False)
          (3): Sigmoid()
        )
      )
    )
  )
  (layer3): Sequential(
    (0): CifarSEBasicBlock(
      (conv1): Conv2d(32, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (se): SELayer(
        (avg_pool): AdaptiveAvgPool2d(output_size=1)
        (fc): Sequential(
          (0): Linear(in_features=64, out_features=4, bias=False)
          (1): ReLU(inplace=True)
          (2): Linear(in_features=4, out_features=64, bias=False)
          (3): Sigmoid()
        )
      )
      (downsample): Sequential(
        (0): Conv2d(32, 64, kernel_size=(1, 1), stride=(2, 2), bias=False)
        (1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (1): CifarSEBasicBlock(
      (conv1): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (se): SELayer(
        (avg_pool): AdaptiveAvgPool2d(output_size=1)
        (fc): Sequential(
          (0): Linear(in_features=64, out_features=4, bias=False)
          (1): ReLU(inplace=True)
          (2): Linear(in_features=4, out_features=64, bias=False)
          (3): Sigmoid()
        )
      )
    )
    (2): CifarSEBasicBlock(
      (conv1): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (se): SELayer(
        (avg_pool): AdaptiveAvgPool2d(output_size=1)
        (fc): Sequential(
          (0): Linear(in_features=64, out_features=4, bias=False)
          (1): ReLU(inplace=True)
          (2): Linear(in_features=4, out_features=64, bias=False)
          (3): Sigmoid()
        )
      )
    )
  )
  (avgpool): AdaptiveAvgPool2d(output_size=1)
  (fc): Linear(in_features=64, out_features=4, bias=True)
)
2020-08-26 09:41:23,399 | CVTrainer-INFO: Optimizer: SGD (
Parameter Group 0
    dampening: 0
    initial_lr: 0.1
    lr: 0.1
    momentum: 0.9
    nesterov: False
    weight_decay: 0.0001
)
2020-08-26 09:41:23,399 | CVTrainer-INFO: Criterion: <function cross_entropy at 0x7ff0ffed69d8>
2020-08-26 09:41:23,859 | CVTrainer-INFO: Number of total data: 81718
2020-08-26 09:41:23,859 | CVTrainer-INFO: ##### Training Configuration #####
2020-08-26 09:41:23,859 | CVTrainer-INFO: device ---> cuda
2020-08-26 09:41:23,860 | CVTrainer-INFO: epochs ---> 10
2020-08-26 09:41:23,860 | CVTrainer-INFO: batches_per_epoch ---> 1400
2020-08-26 09:41:23,860 | CVTrainer-INFO: batch_size ---> 64
2020-08-26 09:41:23,860 | CVTrainer-INFO: num_workers ---> 2
2020-08-26 09:41:23,860 | CVTrainer-INFO: output_folder ---> se_net_trained/fold_1
2020-08-26 09:41:23,860 | CVTrainer-INFO: validation_split ---> 0.1
2020-08-26 09:41:23,860 | CVTrainer-INFO: validation_indices --->  [61865, 23056, 59649 ... 72051, 24834, 22846]
2020-08-26 09:41:23,860 | CVTrainer-INFO: prefetch_validation ---> False
2020-08-26 09:41:23,860 | CVTrainer-INFO: amp ---> False
2020-08-26 09:41:23,860 | CVTrainer-INFO: log_level ---> INFO
2020-08-26 09:41:23,860 | CVTrainer-INFO: early_stopping_patience ---> 0
2020-08-26 09:41:23,860 | CVTrainer-INFO: ##### Training Configuration #####
2020-08-26 09:41:23,870 | CVTrainer-INFO: Using GPU "TITAN Xp COLLECTORS EDITION" for training.
2020-08-26 09:41:23,870 | CVTrainer-INFO: Starting training.
2020-08-26 09:41:23,870 | CVTrainer-INFO: Automatic Mixed Precision is DISABLED
2020-08-26 09:41:23,870 | CVTrainer-INFO: Starting epoch 0
2020-08-26 09:44:32,729 | CVTrainer-INFO: Validating ...
2020-08-26 09:44:38,804 | CVTrainer-INFO: Epoch 0 finished --> Elapsed Time: 194.93358873017132s
2020-08-26 09:44:38,804 | CVTrainer-INFO: Avg. train loss: 0.26458939909935
2020-08-26 09:44:38,804 | CVTrainer-INFO: Avg. validation loss: 1.5386691093444824
2020-08-26 09:44:38,806 | CVTrainer-INFO: Saving checkpoint ...
2020-08-26 09:44:38,822 | CVTrainer-INFO: Starting epoch 1
2020-08-26 09:47:50,964 | CVTrainer-INFO: Validating ...
2020-08-26 09:47:56,894 | CVTrainer-INFO: Epoch 1 finished --> Elapsed Time: 198.0712625910528s
2020-08-26 09:47:56,894 | CVTrainer-INFO: Avg. train loss: 0.19920237362384796
2020-08-26 09:47:56,894 | CVTrainer-INFO: Avg. validation loss: 0.2603195309638977
2020-08-26 09:47:56,895 | CVTrainer-INFO: Saving checkpoint ...
2020-08-26 09:47:56,909 | CVTrainer-INFO: Starting epoch 2
2020-08-26 09:51:09,578 | CVTrainer-INFO: Validating ...
2020-08-26 09:51:15,541 | CVTrainer-INFO: Epoch 2 finished --> Elapsed Time: 198.63196518132463s
2020-08-26 09:51:15,542 | CVTrainer-INFO: Avg. train loss: 0.18971359729766846
2020-08-26 09:51:15,542 | CVTrainer-INFO: Avg. validation loss: 0.23604844510555267
2020-08-26 09:51:15,542 | CVTrainer-INFO: Saving checkpoint ...
2020-08-26 09:51:15,556 | CVTrainer-INFO: Starting epoch 3
2020-08-26 09:54:30,092 | CVTrainer-INFO: Validating ...
2020-08-26 09:54:36,006 | CVTrainer-INFO: Epoch 3 finished --> Elapsed Time: 200.45027381461114s
2020-08-26 09:54:36,007 | CVTrainer-INFO: Avg. train loss: 0.1813429743051529
2020-08-26 09:54:36,007 | CVTrainer-INFO: Avg. validation loss: 5.526053428649902
2020-08-26 09:54:36,008 | CVTrainer-INFO: Saving checkpoint ...
2020-08-26 09:54:36,029 | CVTrainer-INFO: Starting epoch 4
2020-08-26 09:57:50,349 | CVTrainer-INFO: Validating ...
2020-08-26 09:57:56,426 | CVTrainer-INFO: Epoch 4 finished --> Elapsed Time: 200.39697773521766s
2020-08-26 09:57:56,427 | CVTrainer-INFO: Avg. train loss: 0.19330860674381256
2020-08-26 09:57:56,427 | CVTrainer-INFO: Avg. validation loss: 0.2060975283384323
2020-08-26 09:57:56,427 | CVTrainer-INFO: Saving checkpoint ...
2020-08-26 09:57:56,444 | CVTrainer-INFO: Starting epoch 5
2020-08-26 10:01:11,600 | CVTrainer-INFO: Validating ...
2020-08-26 10:01:17,620 | CVTrainer-INFO: Epoch 5 finished --> Elapsed Time: 201.1762239630334s
2020-08-26 10:01:17,621 | CVTrainer-INFO: Avg. train loss: 0.17307573556900024
2020-08-26 10:01:17,621 | CVTrainer-INFO: Avg. validation loss: 0.2858920693397522
2020-08-26 10:01:17,621 | CVTrainer-INFO: Saving checkpoint ...
2020-08-26 10:01:17,633 | CVTrainer-INFO: Starting epoch 6
2020-08-26 10:04:32,199 | CVTrainer-INFO: Validating ...
2020-08-26 10:04:38,146 | CVTrainer-INFO: Epoch 6 finished --> Elapsed Time: 200.51305666007102s
2020-08-26 10:04:38,146 | CVTrainer-INFO: Avg. train loss: 0.1678948849439621
2020-08-26 10:04:38,147 | CVTrainer-INFO: Avg. validation loss: 0.19536404311656952
2020-08-26 10:04:38,147 | CVTrainer-INFO: Saving checkpoint ...
2020-08-26 10:04:38,162 | CVTrainer-INFO: Starting epoch 7
2020-08-26 10:07:53,509 | CVTrainer-INFO: Validating ...
2020-08-26 10:07:59,435 | CVTrainer-INFO: Epoch 7 finished --> Elapsed Time: 201.2733045872301s
2020-08-26 10:07:59,436 | CVTrainer-INFO: Avg. train loss: 0.1651458889245987
2020-08-26 10:07:59,436 | CVTrainer-INFO: Avg. validation loss: 0.7826368808746338
2020-08-26 10:07:59,436 | CVTrainer-INFO: Saving checkpoint ...
2020-08-26 10:07:59,450 | CVTrainer-INFO: Starting epoch 8
2020-08-26 10:11:14,897 | CVTrainer-INFO: Validating ...
2020-08-26 10:11:20,850 | CVTrainer-INFO: Epoch 8 finished --> Elapsed Time: 201.40006447024643s
2020-08-26 10:11:20,851 | CVTrainer-INFO: Avg. train loss: 0.16920529305934906
2020-08-26 10:11:20,851 | CVTrainer-INFO: Avg. validation loss: 0.23758824169635773
2020-08-26 10:11:20,851 | CVTrainer-INFO: Saving checkpoint ...
2020-08-26 10:11:20,865 | CVTrainer-INFO: Starting epoch 9
2020-08-26 10:14:36,147 | CVTrainer-INFO: Validating ...
2020-08-26 10:14:42,077 | CVTrainer-INFO: Epoch 9 finished --> Elapsed Time: 201.2120472197421s
2020-08-26 10:14:42,078 | CVTrainer-INFO: Avg. train loss: 0.15514899790287018
2020-08-26 10:14:42,078 | CVTrainer-INFO: Avg. validation loss: 0.237904354929924
2020-08-26 10:14:42,078 | CVTrainer-INFO: Saving checkpoint ...
2020-08-26 10:14:42,092 | CVTrainer-INFO: Finished training on Fold 1.
